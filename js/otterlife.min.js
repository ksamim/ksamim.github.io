var clog={major:{Story:"A new story has been added. Hover over each locked chapter to see what it takes to read about your otter's journey!","Gift-Giving":"The best part about being in a community is giving back! This new mechanic will help you reach new heights by sharing your extra resources.",Crafting:"As your otters advance through the ages, they learn to make better use of the resources they have.","New Traits":"Two new phases have been added for you to play with, relying on the above two mechanics to varying degrees."},minor:{Icons:"I don't love having to read a page full of text. Icons have replaced a lot of names to increase visual appeal","Multi-Sliders":"You can now move your Otters (and engage with the new Crafting feature) with multiple-click sliders!",Options:"Options have been moved to their own tab and a new Font feature allows you to change the text of the game to your liking.","Other UI":"New Background options have also been added in Options, and bar filling gradients have been improved.",Notation:"A simple change has been made to condense numbers to shorthand, like we're all used to in the incremental game world!","Buff Notifications":"You'll get a visual update when you can use the Direct or Play buffs."},bugs:{desc:"An untold number of bugs have been squashed, chief amongst them the Playmates bug affecting joy. If you're curious, here's a short list of more",list:["Buffs don't reset on game migration","Otters properly leave when food runs out, and the same otters return when you can support them","Joy is now based on food/sec to avoid various issues","Random buffs from the end of the 3rd trait will properly be of equal probability","Gathering Grounds correctly affect Jobs multiplicatively"]}},icons={pop:'<i class="fas fa-otter"></i>',joy:'<i class="fas fa-heart"></i>',gift:'<i class="fas fa-gift"></i>',food:'<i class="fas fa-fish"></i>',wood:'<i class="fas fa-tree"></i>',stone:'<i class="fas fa-mountain"></i>',ore:'<img class="resIcon" src="./images/charcoal.png">',plank:'<img class="resIcon" src="./images/plank.png">',block:'<img class="resIcon" src="./images/block.png">',metal:'<img class="resIcon" src="./images/metal.png">'},themes={blue:{}},otterNames=["ABBEY","ABBIE","ABBY","ABEL","ABIGAIL","ACE","ADAM","ADDIE","ADMIRAL","AGGIE","AIRES","AJ","AJAX","ALDO","ALEX","ALEXUS","ALF","ALFIE","ALLI","ALLIE","ALLY","AMBER","AMIE","AMIGO","AMOS","AMY","ANDY","ANGEL","ANGUS","ANNIE","APOLLO","APRIL","ARCHIE","ARGUS","ARIES","ARMANTI","ARNIE","ARROW","ASHES","ASHLEY","ASTRO","ATHENA","ATLAS","AUDI","AUGIE","AUSSIE","AUSTIN","AUTUMN","AXEL","AXLE","BABBLES","BABE","BABY","BABY-DOLL","BABYKINS","BACCHUS","BAILEY","BAM-BAM","BAMBI","BANDIT","BANJO","BARBIE","BARCLAY","BARKER","BARKLEY","BARLEY","BARNABY","BARNEY","BARON","BART","BASIL","BAXTER","BB","BEAMER","BEANIE","BEANS","BEAR","BEAU","BEAUTY","BEAUX","BEBE","BEETLE","BELLA","BELLE","BEN","BENJI","BENNY","BENSON","BENTLEY","BERNIE","BESSIE","BIABLO","BIBBLES","BIG BOY","BIG FOOT","BIGGIE","BILLIE","BILLY","BINGO","BINKY","BIRDIE","BIRDY","BISCUIT","BISHOP","BITS","BITSY","BIZZY","BJ","BLACKIE","BLACK-JACK","BLANCHE","BLAST","BLAZE","BLONDIE","BLOSSOM","BLUE","BO","BOB","BOBBIE","BOBBY","BOBO","BODIE","BOGEY","BONES","BONGO","BONNIE","BOO","BOO-BOO","BOOKER","BOOMER","BOONE","BOOSTER","BOOTIE","BOOTS","BOOZER","BORIS","BOSCO","BOSLEY","BOSS","BOY","BOZLEY","BRADLEY","BRADY","BRAGGS","BRANDI","BRANDO","BRANDY","BRIDGETT","BRIDGETTE","BRIE","BRINDLE","BRIT","BRITTANY","BRODIE","BROOK","BROOKE","BROWNIE","BRUISER","BRUNO","BRUTUS","BUBBA","BUBBLES","BUCK","BUCKEYE","BUCKO","BUCKY","BUD","BUDDA","BUDDIE","BUDDY","BUDDY BOY","BUFFIE","BUFFY","BUG","BUGSEY","BUGSY","BULLET","BULLWINKLE","BULLY","BUMPER","BUNKY","BUSTER","BUSTER-BROWN","BUTCH","BUTCHY","BUTTER","BUTTERBALL","BUTTERCUP","BUTTERSCOTCH","BUTTONS","BUZZY","CAESAR","CALI","CALLIE","CALVIN","CAMEO","CAMILLE","CANDY","CAPONE","CAPTAIN","CARLEY","CASEY","CASPER","CASSIE","CASSIS","CHA CHA","CHAD","CHAMBERLAIN","CHAMP","CHANCE","CHANEL","CHAOS","CHARISMA","CHARLES","CHARLIE","CHARMER","CHASE","CHAUNCEY","CHAZ","CHECKERS","CHELSEA","CHEROKEE","CHESSIE","CHESTER","CHEVY","CHEWIE","CHEWY","CHEYENNE","CHI CHI","CHIC","CHICO","CHIEF","CHILI","CHINA","CHIP","CHIPPER","CHIPPY","CHIPS","CHIQUITA","CHIVAS","CHLOE","CHOCOLATE","CHRISSY","CHUBBS","CHUCKY","CHYNA","CINDER","CINDY","CINNAMON","CISCO","CLAIRE","CLANCY","CLEO","CLEOPATRA","CLICKER","CLIFFORD","CLOVER","CLYDE","COAL","COBWEB","COCO","COCOA","COCONUT","CODI","CODY","COLE","COMET","COMMANDO","CONAN","CONNOR","COOKIE","COOPER","COPPER","CORKY","COSMO","COTTON","COZMO","CRACKERS","CRICKET","CRYSTAL","CUBBY","CUBS","CUJO","CUPCAKE","CURLY","CURRY","CUTIE","CUTIE-PIE","CYRUS","DAFFY","DAISEY-MAE","DAISY","DAKOTA","DALLAS","DANDY","DANTE","DAPHNE","DARBY","DARCY","DARWIN","DASH","DAVE","DEACON","DEE","DEE DEE","DEMPSEY","DESTINI","DEWEY","DEXTER","DHARMA","DIAMOND","DICKENS","DIEGO","DIESEL","DIGGER","DILLON","DINKY","DINO","DIVA","DIXIE","DOBIE","DOC","DODGER","DOGGON","DOLLY","DOMINO","DOODLES","DOOGIE","DOTS","DOTTIE","DOZER","DRAGSTER","DREAMER","DUCHESS","DUDE","DUDLEY","DUFFY","DUKE","DUNCAN","DUNN","DUSTY","DUTCHES","DUTCHESS","DYLAN","EARL","EBONY","ECHO","EDDIE","EDDY","EDGAR","EDSEL","EIFEL","EINSTEIN","ELLE","ELLIE","ELLIOT","ELMO","ELVIS","ELWOOD","EMBER","EMILY","EMMA","EMMY","ERIN","ERNIE","EVA","FAITH","FANCY","FELIX","FERGIE","FERRIS","FIDO","FIFI","FIGARO","FINNEGAN","FIONA","FLAKE","FLAKEY","FLASH","FLINT","FLOPSY","FLOWER","FLOYD","FLUFFY","FONZIE","FOXY","FRANCAIS","FRANKIE","FRANKY","FRECKLES","FRED","FREDDIE","FREDDY","FREEDOM","FREEWAY","FRESIER","FRIDAY","FRISCO","FRISKY","FRITZ","FRODO","FROSTY","FURBALL","FUZZY","GABBY","GABRIELLA","GARFIELD","GASBY","GATOR","GAVIN","GENIE","GEORGE","GEORGIA","GEORGIE","GIANT","GIBSON","GIDGET","GIGI","GILBERT","GILDA","GINGER","GINNY","GIRL","GIZMO","GODIVA","GOLDIE","GOOBER","GOOSE","GORDON","GRACE","GRACE","GRACIE","GRACIE","GRADY","GREENIE","GRETA","GRETCHEN","GRETEL","GRETTA","GRIFFEN","GRINGO","GRIZZLY","GROMIT","GROVER","GUCCI","GUINNESS","GUNNER","GUNTHER","GUS","GUY","GYPSY","HAILEY","HALEY","HALLIE","HAMLET","HAMMER","HANK","HANNA","HANNAH","HANS","HAPPYT","HARDY","HARLEY","HARPO","HARRISON","HARRY","HARVEY","HEATHER","HEIDI","HENRY","HERCULES","HERSHEY","HIGGINS","HOBBES","HOLLY","HOMER","HONEY","HONEY-BEAR","HOOCH","HOOVER","HOPE","HOUDINI","HOWIE","HUDSON","HUEY","HUGH","HUGO","HUMPHREY","HUNTER","INDIA","INDY","IRIS","ISABELLA","ISABELLE","ITSY","ITSY-BITSY","IVORY","IVY","IZZY","JACK","JACKIE","JACKPOT","JACKSON","JADE","JAGGER","JAGS","JAGUAR","JAKE","JAMIE","JASMINE","JASPER","JAXSON","JAZMIE","JAZZ","JELLY","JELLY-BEAN","JENNA","JENNY","JERRY","JERSEY","JESS","JESSE","JESSE JAMES","JESSIE","JESTER","JET","JETHRO","JETT","JETTA","JEWEL","JEWELS","JIMMUY","JINGLES","JJ","JOE","JOEY","JOHNNY","JOJO","JOKER","JOLIE","JOLLY","JORDAN","JOSIE","JOY","JR","JUDY","JULIUS","JUNE","JUNIOR","JUSTICE","KALI","KALLIE","KANE","KARMA","KASEY","KATIE","KATO","KATZ","KAYLA","KC","KEESHA","KELLIE","KELLY","KELSEY","KENYA","KERRY","KIBBLES","KID","KIKI","KILLIAN","KING","KIPPER","KIRA","KIRBY","KISMET","KISSY","KITTY","KIWI","KLAUS","KOBA","KOBU","KODA","KOKO","KONA","KOSMO","KOTY","KRAMER","KUJO","KURLY","KYRA","LACEY","LADDIE","LADY","LADYBUG","LANEY","LASSIE","LATTE","LAYLA","LAZARUS","LEFTY","LEO","LEVI","LEXI","LEXIE","LEXUS","LIBBY","LIGHTNING","LILI","LILLY","LILY","LINCOLN","LINUS","LITTLE BIT","LITTLE-GUY","LITTLE-ONE","LITTLE-RASCAL","LIZZY","LOGAN","LOKI","LOLA","LOU","LOUIE","LOUIS","LOVEY","LUCAS","LUCI","LUCIFER","LUCKY","LUCY","LUKE","LULU","LUNA","LYNX","MAC","MACHO","MACINTOSH","MACK","MACKENZIE","MACY","MADDIE","MADDY","MADISON","MAGGIE","MAGGIE-MAE","MAGGIE-MOO","MAGGY","MAGIC","MAGNOLIA","MAJOR","MANDI","MANDY","MANGO","MARBLE","MARIAH","MARLEY","MARY","MARY JANE","MASON","MATTIE","MAVERICK","MAX","MAXIMUS","MAXINE","MAXWELL","MAY","MAYA","MCDUFF","MCKENZIE","MEADOW","MEGAN","MEGGIE","MERCEDES","MERCLE","MERLIN","MIA","MIASY","MICHAEL","MICKEY","MIDNIGHT","MIKEY","MIKO","MILES","MILLER","MILLIE","MILO","MIMI","MINDY","MING","MINI","MINNIE","MISCHIEF","MISHA","MISS KITTY","MISS PRISS","MISSIE","MISSY","MISTER","MISTY","MITCH","MITTENS","MITZI","MITZY","MO","MOCHA","MOJO","MOLLIE","MOLLY","MONA","MONKEY","MONSTER","MONTANA","MONTGOMERY","MONTY","MOOCHER","MOOCHIE","MOOKIE","MOONSHINE","MOOSE","MORGAN","MOSES","MOUSE","MR KITTY","MUFFIN","MUFFY","MUGSY","MULLIGAN","MUNCHKIN","MURPHY","NAKITA","NALA","NANA","NAPOLEON","NATASHA","NATHAN","NELLIE","NEMO","NENA","NERO","NESTLE","NEWT","NEWTON","NIBBLES","NIBBY","NIBBY-NOSE","NICK","NICKERS","NICKIE","NICKY","NICO","NIKE","NIKI","NIKITA","NIKKI","NIKO","NINA","NITRO","NOBEL","NOEL","NONA","NOODLES","NORTON","NOSEY","NUGGET","NUTMEG","OAKLEY","OBIE","ODIE","OLD GLORY","OLIVE","OLIVER","OLIVIA","OLLIE","ONIE","ONYX","OPIE","OREO","OSCAR","OTIS","OTTO","OZ","OZZIE","OZZY","PABLO","PACO","PADDINGTON","PADDY","PANDA","PANDORA","PANTHER","PAPA","PARIS","PARKER","PASHA","PATCH","PATCHES","PATRICKY","PATSY","PATTY","PEACHES","PEANUT","PEANUTS","PEARL","PEBBLES","PEDRO","PENNY","PEPE","PEPPER","PEPPY","PEPSI","PERSY","PETE","PETER","PETEY","PETIE","PHANTOM","PHOEBE","PHOENIX","PICASSO","PICKLES","PIERRE","PIGGY","PIGLET","PINK","PINKY","PINTO","PIPER","PIPPIN","PIPPY","PIP-SQUEEK","PIRATE","PIXIE","PLATO","PLUTO","POCKETS","POGO","POKEY","POLLY","PONCHO","PONGO","POOCH","POOCHIE","POOH","POOH-BEAR","POOKIE","POOKY","POPCORN","POPPY","PORCHE","PORKCHOP","PORKY","PORTER","POWDER","PRANCER","PRECIOUS","PRESLEY","PRETTY","PRINCE","PRINCESS","PRISSY","PUCK","PUDDLES","PUDGE","PUFFY","PUGSLEY","PUMPKIN","PUNKIN","PUPPY","PURDY","QUEEN","QUEENIE","QUINCY","QUINN","RAGS","RAISON","RALPH","RALPHIE","RAMBLER","RAMBO","RANGER","RASCAL","RAVEN","REBEL","RED","REGGIE","REILLY","REMY","REX","REXY","RHETT","RICKY","RICO","RIGGS","RILEY","RIN TIN TIN","RINGO","RIPLEY","ROCCO","ROCK","ROCKET","ROCKO","ROCKY","ROLAND","ROLEX","ROLLIE","ROMAN","ROMEO","ROSA","ROSCOE","ROSEBUD","ROSIE","ROSY","ROVER","ROWDY","ROXANNE","ROXIE","ROXY","RUBY","RUCHUS","RUDY","RUFFE","RUFFER","RUFFLES","RUFUS","RUGER","RUSTY","RUTHIE","RYDER","SABINE","SABLE","SABRINA","SADIE","SAGE","SAILOR","SALEM","SALLY","SALTY","SAM","SAMANTHA","SAMMY","SAMPSON","SAMSON","SANDY","SARA","SARAH","SARGE","SASHA","SASSIE","SASSY","SAVANNAH","SAWYER","SCARLETT","SCHOTZIE","SCHULTZ","SCUBA","SCOOBER","SCOOBER-DOO","SCOOTER","SCOTTIE","SCOUT","SCRAPPY","SCRUFFY","SEBASTIAN","SHADOW","SHADY","SHAGGY","SHASTA","SHEBA","SHEENA","SHELBY","SHELLY","SHERMAN","SHILOH","SHINER","SHORTY","SIENNA","SIERRA","SILKY","SILVER","SILVESTER","SIMBA","SIMON","SIMONE","SISSY","SKEETER","SKINNY","SKIP","SKIPPER","SKIPPY","SKITTLES","SKY","SKYE","SKYLER","SLICK","SLINKY","SLY","SMARTY","SMOKE","SMOKEY","SMUDGE","SNEAKERS","SNICKERS","SNOOP","SNOOPY","SNOWBALL","SNOWFLAKE","SNOWY","SNUFFLES","SNUGGLES","SOLOMON","SONNY","SOPHIA","SOPHIE","SOX","SPANKY","SPARKLE","SPARKY","SPEED","SPEEDO","SPEEDY","SPENCER","SPIKE","SPIRIT","SPOOKEY","SPOT","SPOTTY","SPUD","SPUNKY","SQUEEKY","SQUIRT","STANLEY","STAR","STARR","STELLA","STERLING","STICH","STINKY","STORMY","STUART","SUGAR","SUGAR-BABY","SUMMER","SUMO","SUNDANCE","SUNDAY","SUNNY","SUNSHINE","SUSIE","SUSIE-Q","SUZY","SWEETIE","SWEETIE-PIE","SWEET-PEA","SYDNEY","TABBY","TABETHA","TACO","TAFFY","TALLY","TAMMY","TANGLES","TANGO","TANK","TANNER","TARA","TASHA","TAYLOR","TAZ","T-BIRD","T-BONE","TEDDY","TEDDY-BEAR","TEQUILA","TESS","TESSA","TESSIE","TEX","THELMA","THOR","THUMPER","THUNDER","THYME","TIFFANY","TIGER","TIGGER","TIGGY","TIKI","TILLY","TIMBER","TIMMY","TINKER","TINKER-BELL","TINKY","TINY","TIPPY","TIPR","TITAN","TITO","TITUS","TOBIE","TOBY","TOFFEE","TOM","TOMMY","TOMMY-BOY","TONI","TONY","TOOTS","TOOTSIE","TOPAZ","TORI","TOTO","TRACKER","TRAMP","TRAPPER","TRAVIS","TRIGGER","TRINITY","TRIPOD","TRISTAN","TRIXIE","TROOPER","TROUBLE","TROY","TRUFFLES","TUCK","TUCKER","TUESDAY","TUFFY","TURBO","TURNER","TUX","TWIGGY","TWINKLE","TY","TYLER","TYSON","VALINTO","VAVA","VEGAS","VELVET","VINNIE","VINNY","VIOLET","VITO","VOLVO","WADDLES","WAGS","WALDO","WALLACE","WALLY","WALTER","WAYNE","WEAVER","WEBSTER","WESLEY","WESTIE","WHISKERS","WHISKEY","WHISPY","WHITIE","WHIZ","WIGGLES","WILBER","WILLIE","WILLOW","WILLY","WILSON","WINNIE","WINSTON","WINTER","WIZ","WIZARD","WOLFGANG","WOLFIE","WOODY","WOOFIE","WRIGLEY","WRINKLES","WYATT","XENA","YAKA","YANG","YELLER","YELLOW","YIN","YODA","YOGI","YOGI-BEAR","YUKON","ZACK","ZEKE","ZENA","ZEUS","ZIGGY","ZIPPY","ZOE","ZOEY","ZOIE","ZORRO","CORA","FILLER"],game;class Story{constructor(){this.init()}init(){this.story={ch1:{visible:!0,unlocked:!1,viewed:!1,how:"Start stockpiling the good stuff!",log:"Your first chapter has been written. Check the Story!",logged:!1},ch2:{visible:!0,unlocked:!1,viewed:!1,how:"Make room for new friends",pal:"",log:"Friends have arrived! The Story has a new entry.",logged:!1},ch3:{visible:!0,unlocked:!1,viewed:!1,how:"Learn to delegate",log:"Management suits you. Check out the Story for a new entry!",logged:!1},ch4:{visible:!0,unlocked:!1,viewed:!1,how:"Discover your deeper self",log:"Your thoughts grow more complex. The Story has been updated.",logged:!1},ch5:{visible:!0,unlocked:!1,viewed:!1,how:"Let the universe return your generosity",log:"The universe bestows a great boon upon you. Your Story continues.",logged:!1},ch6:{visible:!0,unlocked:!1,viewed:!1,how:"Bend materials to your needs",log:"Your Story reflects your hard work in Making. Give it a look!",logged:!1}},this.drawChapters()}chText(e){return"ch1"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 1</div>Welcome to Otter Life!</div>\n            <div class='chPara'>You are an otter playing on the riverbank, tossing a shiny stone you've found.\n            Times have been peaceful, since long before you were born,\n            and the plentiful food and fun you see all around you assures you that it will be so long after you are gone.</div>\n            <div class='chPara'>You are a careful otter, though, and you know that the future holds many unknown secrets. Stone in hand, you set out\n            to make sure you are prepared for whatever may come.</div>\n            ":"ch2"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 2</div>Friends Make Everything Better</div>\n            <div class='chPara'>When your first Otter pal, "+this.story.ch2.pal+", arrived, you found not only a greater purpose for your adventures, but\n            also the means to achieve them. For there is nothing more important than the family you have, or the one you make.</div>\n            <div class='chPara'>While just providing for your new family would bring happiness enough, they too are eager to help. \n            With your growing numbers, each member can learn and specialize, making the growth of your village exponential. You hold your little stone\n            tight, and press on, now as a team.</div>\n            ":"ch3"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 3</div>The Sum is Greater Than the Parts</div>\n            <div class='chPara'>Pod, romp, family, lodge -- whatever you call it, no word can capture the power of a community.\n            With the aquafarmers farming, the loggers logging, and the miners digging, you are never for want of more resources.</div>\n            <div class='chPara'>Your family operates so smoothly, in fact, it is difficult to feel impactful by doing the work alone.\n            With simple encouragement, you can magnify the work your family does, though this is not more important than making them feel\n            truly valued.</div>\n            ":"ch4"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 4</div>Me</div>\n            <div class='chPara'>Your basic needs are far behind you and your family, thanks to your joint efforts. While you all are\n            experiencing joy previously unknown to Otterkind, you feel the draw of a type of pain, not unlike hunger, but not quite\n            so primal.</div>\n            <div class='chPara'>The pain feels not like a curse, but fuel, to pursue accomplishing greater goals, to find deeper\n            meaning, and draw greater satisfaction from your world. In your pursuit of joy, you have learned it is not a destination,\n            but an endless journey.</div>\n            ":"ch5"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 5</div>The Giving Otter</div>\n            <div class='chPara'>As your family gathers on the riverbank, watching countless resources drift down your familiar\n            river, none chitter about the loss to your village. Instead, your burgeoning group hugs, kisses,\n            and daydreams about the possible communities that could develop rapidly with your selfless act.</div>\n            <div class='chPara'>As your flotilla rounds a distant bend, out of view, your favorite stone grows warm in its\n            satchel. Instead of trepidation, you feel excitement, wondering how else it, and you, will change in the\n            coming days.</div>\n            ":"ch6"==e?"\n            <div class='chTitle'><div class='chDisp'>CHAPTER 6</div>The Oblong Muse</div>\n            <div class='chPara'>From the first buzz of the saw and thunk of the hammer, you knew you have discovered\n            what it means to be more. Manipulating stone and wood to provide better shelter and more fun for your tribe\n            could not be a more noble cause.</div>\n            <div class='chPara'>The designs were rudimentary at first, just smooth flat geometric shapes. Examining your favorite\n            stone drove a more keen design, with its unnatural edges and curves, which you hadn't noticed before. Soon,\n            new houses and storehouses will dot the landscape, with much more to come.</div>\n            ":void 0}unlockStory(){(game.buildings.buildings.food.v>1||game.buildings.buildings.pit.v>1)&&this.unlock("ch1"),game.resources.resources.pop.m>1&&this.unlock("ch2"),game.upgrades.upgrades.supervise.completed&&this.unlock("ch3"),game.upgrades.upgrades.evosapience.completed&&this.unlock("ch4"),game.karma.kismet.camaraderie.v+game.karma.kismet.benevolence.v+game.karma.kismet.trust.v>0&&this.unlock("ch5"),(game.buildings.buildings.home2.v>0||game.buildings.buildings.garner.v>0||game.buildings.buildings.atelier.v>0)&&this.unlock("ch6"),this.drawChapters()}unlock(e){this.story[e].unlocked||(this.story[e].unlocked=!0,null!=this.story[e].log&&(addLog(this.story[e].log,"journal"),this.story[1==e.logged]))}drawChapters(){var e=!1,t='<div class="storyMenu">',s='<div class="chapters">';for(var o in s+='<div class="chapterBlock" id="ch0">',s+='<img class="chImage" src="images/storyLanding.png" />',s+="</div>",Object.keys(this.story)){var i=parseInt(o);if(this.story["ch"+(i+1)].visible){var a="",r="";this.story["ch"+(i+1)].unlocked?this.story["ch"+(i+1)].viewed||(r=" newEntry",e=!0):a=" dis",t+='<div class="storyMenuBtn'+a+r+'" id="ch'+(i+1)+'Btn">Ch '+(i+1)+"</div>",s+='<div class="chapterBlock writtenChapter" id="ch'+(i+1)+'">',s+=this.chText("ch"+(i+1)),s+="</div>"}}e&&$(".menuBtn#storyBtn").addClass("newStory"),t+="</div>",s+="</div>",$("#storyView").html(t+s),$("#ch0").css("display","block"),this.chapterOnclicks(),this.chapterTooltips(),this.updateGlows()}chapterOnclicks(){for(var e of Object.keys(this.story))$("#"+e+"Btn").prop("onclick",null).off("click"),$("#"+e+"Btn").click((function(){var e=this.id.substring(0,this.id.length-3);game.story.story[e].unlocked&&($(".chapterBlock").css("display","none"),$("#"+e).css("display","block"),$(".storyMenuBtn").removeClass("activeChap"),$("#"+this.id).addClass("activeChap"),$("#"+this.id).removeClass("newEntry"),game.story.story[e].viewed=!0,game.story.updateGlows())}))}chapterTooltips(){for(var e of Object.keys(this.story))this.story[e].unlocked||addText("#"+e+"Btn",this.story[e].how)}updateGlows(){var e=!1;for(var t of Object.keys(this.story))this.story[t].unlocked&&(this.story[t].viewed?$("#"+t+"Btn").removeClass("newEntry"):($("#"+t+"Btn").addClass("newEntry"),e=!0));e?$(".menuBtn#storyBtn").addClass("newStory"):$(".menuBtn#storyBtn").removeClass("newStory")}}function toTitleCase(e){return e.toLowerCase().replace(/(?:^|\s|\-)\w/g,(function(e){return e.toUpperCase()}))}function addLog(e,t="base"){$(".logcontents").html('<div class="log'+t+'">'+e+"</div>"+$(".logcontents").html()),$(".logcontents div").length>100&&$(".logcontents div:last-child").remove()}function addText(e,t,s=null,o=0){if(costText="",specificity=Math.pow(10,o),null!=s)for(var i of(costText+='<hr/><div class="costText">REQUIRES</div>',Object.keys(s)))0!=s[i]&&(costText+=getIcon(i)+" "+intToString(s[i],1)+"<br/>");0==$(e+" .tooltiptext").length?$(e).html($(e).html()+'<span class="tooltiptext">'+t+costText+"</span>"):$(e+" .tooltiptext").html(t+costText),$(e).prop("mouseenter",null).off("mouseenter"),$(e).mouseenter((function(){$(".mouseTooltip").css("display","block"),game.curTooltipId=this.id,this.id.endsWith("Btn")?$(".mouseTooltip").addClass("menuOpt"):$(".mouseTooltip").removeClass("menuOpt"),this.id.endsWith("Icon")?$(".mouseTooltip").addClass("resOpt"):$(".mouseTooltip").removeClass("resOpt"),$(".mouseTooltip").html($("#"+game.curTooltipId+" .tooltiptext").html()),game.tooltipRefresher&&(clearInterval(game.tooltipRefresher),game.tooltipRefresher=null),game.tooltipRefresher=setInterval((function(){$(".mouseTooltip").html($("#"+game.curTooltipId+" .tooltiptext").html())}),1e3);var e=.7*$(window).height(),t=.9*$(window).width(),s=event.pageX+10,o=$(window).width()-event.pageX+10,i=event.pageY+10-$(document).scrollTop(),a=$(window).height()-event.pageY+$(document).scrollTop()-20;event.pageY>e?event.pageX>t?$(".mouseTooltip").css({left:"",right:o,top:"",bottom:a}):$(".mouseTooltip").css({left:s,right:"",top:"",bottom:a}):event.pageX>t?$(".mouseTooltip").css({left:"",right:o,top:i,bottom:""}):$(".mouseTooltip").css({left:s,right:"",top:i,bottom:""})})),$(e).prop("mouseleave",null).off("mouseleave"),$(e).mouseleave((function(){$(".mouseTooltip").css("display","none"),clearInterval(game.tooltipRefresher)})),$(e).prop("mousemove",null).off("mousemove"),$(e).mousemove((function(e){var t=.7*$(window).height(),s=.9*$(window).width(),o=e.pageX+10,i=$(window).width()-e.pageX+10,a=e.pageY+10-$(document).scrollTop(),r=$(window).height()-e.pageY+$(document).scrollTop()-20;e.pageY>t?e.pageX>s?$(".mouseTooltip").css({left:"",right:i,top:"",bottom:r}):$(".mouseTooltip").css({left:o,right:"",top:"",bottom:r}):e.pageX>s?$(".mouseTooltip").css({left:"",right:i,top:a,bottom:""}):$(".mouseTooltip").css({left:o,right:"",top:a,bottom:""})}))}function modFunctions(e,t,s,o=!1){var i=e;if(o)switch(e){case"add":i="subtract";break;case"subtract":i="add";break;case"multiply":i="divide";break;case"divide":i="multiply"}switch(i){case"add":return t+s;case"subtract":return s-t;case"multiply":return t*s;case"divide":return s/t;case"set":return t;case"zero":return 0;case"append":return t.concat(s)}}function printValueAndSign(e){return e<0?"-"+e:"+"+e}function LogGamma(Z){with(Math)var S=1+76.18009173/Z-86.50532033/(Z+1)+24.01409822/(Z+2)-1.231739516/(Z+3)+.00120858003/(Z+4)-536382e-11/(Z+5),LG=(Z-.5)*log(Z+4.5)-(Z+4.5)+log(2.50662827465*S);return LG}function Betinc(e,t,s){for(var o,i=0,a=1,r=1,l=1,n=0,c=0;Math.abs((r-c)/r)>1e-5;)c=r,a=l+(o=-(t+n)*(t+s+n)*e/(t+2*n)/(t+2*n+1))*a,r=(i=r+o*i)+(o=(n+=1)*(s-n)*e/(t+2*n-1)/(t+2*n))*r,i/=l=a+o*l,a/=l,r/=l,l=1;return r/t}function compute_bindiff(X,N,P){with(Math)N<=0||P<0||P>1||(X<0?bincdf=0:X>=N?bincdf=1:(X=floor(X),Z=P,A=X+1,B=N-X,S=A+B,BT=exp(LogGamma(S)-LogGamma(B)-LogGamma(A)+A*log(Z)+B*log(1-Z)),Z<(A+1)/(S+2)?Betacdf=BT*Betinc(Z,A,B):Betacdf=1-BT*Betinc(1-Z,B,A),bincdf=1-Betacdf)),bincdf=round(1e5*bincdf)/1e5;return 1-bincdf}function dhm(e){var t=864e5,s=Math.floor(e/t),o=Math.floor((e-s*t)/36e5),i=Math.round((e-s*t-36e5*o)/6e4);60===i&&(o++,i=0),24===o&&(s++,o=0);var a=[];if(s>0){var r="";s>1&&(r="s"),a=a.concat([s+" day"+r])}if(o>0){r="";o>1&&(r="s"),a=a.concat([o+" hour"+r])}if(i>0){r="";i>1&&(r="s"),a=a.concat([i+" minute"+r])}return a.join(", ")}function copyToClipboard(e){var t=$("<input>");$("body").append(t),t.val(e).select(),document.execCommand("copy"),t.remove()}function sec2time(e){var t=function(e,t){return("000"+e).slice(-1*t)},s=parseFloat(e).toFixed(3),o=Math.floor(s/60/60),i=Math.floor(s/60)%60,a=Math.floor(s-60*i),r=(s.slice(-3),"");return r=0==i&a>=0&0==o?a:t(a,2),i>0&0==o&&(r=i+":"+r),i>=0&o>0&&(r=t(i,2)+":"+r),o>0&&(r=t(o,2)+":"+r),r}function intToString(e,t=1){if(e<0&&(t=2),null===e)return null;if(0===e)return"0";t=!t||t<0?0:t;var s=e.toPrecision(2).split("e"),o=1===s.length?0:Math.floor(Math.min(s[1].slice(1),14)/3),i=o<1?e.toFixed(0+t):(e/Math.pow(10,3*o)).toFixed(1+t);return(i<0?i:Math.abs(i))+["","K","M","B","T","Qa","Qi","Sx","Sp","O","N","D"][o]}function c(e){console.log(e)}function getIcon(e){return icons[e]}function shuffle(e){for(var t,s,o=e.length;0!==o;)s=Math.floor(Math.random()*o),t=e[o-=1],e[o]=e[s],e[s]=t;return e}function makeMultiSelectTooltip(e,t="Make"){var s='<div class="multiSliderContainer">';return s+='<div class="bgIcon">'+t+': <span id="'+e+'MultiDisplay">1</span></div>',s+='<input type="range" min="1" max="6" value="1" class="multiSlider" id="'+e+'Multi">',s+="</div>"}function multiValConvert(e){return"1"==e?1:"2"==e?5:"3"==e?10:"4"==e?25:"5"==e?50:"6"==e?999999999999:void 0}class Otter{constructor(e=null){this.makeOtterHash(e)}makeOtterHash(e){this.otter=null!=e?e:{name:this.pickUniqueName(),job:"noJob",level:0,exp:0,expRate:.25,manages:null,impact:.25}}nextCutoff(){return 100*Math.pow(2,this.otter.level)}pickUniqueName(){for(var e="",t=!1;!t;)if(e=toTitleCase(otterNames[Math.floor(Math.random()*otterNames.length)]),t=!0,null!=game&&null!=game.community)for(var s of game.community.otters)0==e.localeCompare(s.otter.name)&&(t=!1);return e}getImpact(){return.05*(this.otter.level+1)}getOtterHash(){return this.otter}setOtterHash(e){this.otter=e}tickExperience(){var e=this.otter.expRate;return null!=this.otter.manages&&(e*=3),game.upgrades.eraComplete("evocommunal")&&(e*=2),game.upgrades.upgrades.acclimatize.completed&&(e*=4),this.otter.exp+=e*(game.gameSpeed/1e3),this.otter.exp>=this.nextCutoff()&&(this.otter.exp=0,this.otter.level+=1,!0)}}class Res{constructor(){this.init()}init(){this.resources={pop:{hover:"Otters",icon:icons.pop,v:1,i:-1,m:0,g_mult:1,visible:!0,giftable:!1},joy:{hover:"Joy",icon:icons.joy,description:'Play for a bit to generate more joy!<hr/><i>Temporary x<span id="e">2</span> '+getIcon("joy")+"/s</i>",v:0,m:5,i:1e9,g_base:0,g:.1,g_mult_jobs:1,g_mult:1,g_mult_i:1,g_mult_k:1,t:"play",visible:!0,giftable:!1},gift:{hover:"Karma",icon:icons.gift,v:0,i:1,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,visible:!1,giftable:!1},food:{hover:"Food",icon:icons.food,description:'Gather up something to eat!<hr/><i>+<span id="e">1</span> '+getIcon("food")+"</i>",v:0,m:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,t:"gather shrimp",visible:!0,giftable:!0,g_value:.01},wood:{hover:"Wood",icon:icons.wood,description:'Scrounge up some wood!<hr/><i>+<span id="e">1</span> '+getIcon("wood")+"</i>",v:0,m:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,t:"collect twigs",visible:!0,giftable:!0,g_value:.01},stone:{hover:"Stone",icon:icons.stone,description:'Dig around for some stones!<hr/><i>+<span id="e">1</span> '+getIcon("stone")+"</i>",v:0,m:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,t:"collect pebbles",visible:!0,giftable:!0,g_value:.01},ore:{hover:"Ore",icon:icons.ore,v:0,m:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,visible:!1,giftable:!0,g_value:.1},plank:{hover:"Plank",icon:icons.plank,description:'Grab a log and plane a plank<hr/><i>+<span id="e">1</span> '+getIcon("plank")+"</i>",cost:{wood:500},v:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,visible:!1,giftable:!0,craftable:!0,g_value:1},block:{hover:"Block",icon:icons.block,description:'Knock at a big ol\' rock to make a block<hr/><i>+<span id="e">1</span> '+getIcon("block")+"</i>",cost:{stone:500},v:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,visible:!1,giftable:!0,craftable:!0,g_value:1},metal:{hover:"Metal",icon:icons.metal,description:'Press a petal to melt ore into metal<hr/><i>+<span id="e">1</span> '+getIcon("metal")+"</i>",cost:{ore:500},v:0,g:0,g_mult:1,g_mult_jobs:1,g_mult_k:1,i:1,visible:!1,giftable:!0,craftable:!0,g_value:1}},this.clickable_resources=["food","wood","stone","joy"],this.resetCopy=JSON.parse(JSON.stringify(this.resources)),this.otterTimer=0,this.resConf={makers:{},makerTot:0,makeTimer:0,makeTimerMax:3e4,craftMultiVal:1,craftMulti:1,makerCraftAmt:1},this.resConfResetCopy=JSON.parse(JSON.stringify(this.resConf))}add(e,t=null){return null==t&&(t=this.resources[e].i),(!this.isCapped(e)||this.resources[e].v+t<=this.resources[e].m)&&this.resources[e].v+t>=0||this.resources[e].v+t>this.resources[e].m&&t<0?(this.resources[e].v+=Math.round(100*t)/100,!0):!this.isCapped(e)||this.resources[e].v+t>this.resources[e].m?((!this.isCapped(e)||this.resources[e].v<this.resources[e].m)&&(this.resources[e].v=this.resources[e].m),!1):this.resources[e].v+t<0?(this.resources[e].v=0,!1):void 0}isCapped(e){return null!=this.resources[e].m}setV(e,t){this.resources[e].v=t}setVisible(e,t){this.resources[e].visible=t}resetResourceMetrics(){for(var e of Object.keys(this.resources))for(var t of["m","i","g","g_base","g_mult","g_mult_base","g_mult_jobs","g_mult_k"])this.resources[e][t]=this.resetCopy[e][t];this.resConf.makeTimerMax=this.resConfResetCopy.makeTimerMax,this.resConf.makerCraftAmt=this.resConfResetCopy.makerCraftAmt}checkCosts(e,t=1){let s=!0;for(var o of Object.keys(e))e[o]*t>this.resources[o].v&&(s=!1);return s}applyCost(e){for(var t of Object.keys(e))this.add(t,-1*e[t])}modIntensity(e,t=1,s=1,o=1){this.resources[e].i=(this.resources[e].i*s+t)*o}modMaxStorage(e,t){this.resources[e].i=(this.resources[e].i*preMult+t)*postMult}getCur(e){return Math.round(this.resources[e].v)}getMax(e){return this.resources[e].m}getPPS(e){var t=1,s=this.resources[e].g*this.resources[e].g_mult*this.resources[e].g_mult_jobs*this.resources[e].g_mult_k;return game.upgrades.upgrades.goodcompany.completed&&(t=1+.01*game.resources.resources.pop.v),"food"==e?Math.round(100*(t*s+this.resources.pop.i*this.resources.pop.v))/100:"joy"!=e?Math.round(t*s*100)/100:Math.round(100*s)/100}getIntensity(e){return Math.round(100*this.resources[e].i)/100}getTypeName(e){return this.resources[e].t}getClickable(){return this.clickable_resources}names(){return Object.keys(this.resources)}tick(){this.resConf.makeTimer>0&&(this.resConf.makeTimer-=1e3/game.gameSpeed,$(".mkrTimer").html(Math.max(0,Math.floor(this.resConf.makeTimer/1e3))));var e=!1;for(name of this.names()){if(null!=this.resources[name].m&this.resources[name].m>this.resources[name].v){var t=this.getNextResourceTick(name);this.add(name,t*(1/game.gameSpeed))}if(this.resources[name].craftable&&(this.checkCraftables(name),this.resConf.makeTimer<=0))for(var s=0;s<parseInt(this.resConf.makers[name]);++s)e=!0,this.craft(name)}e&&this.triggerMakeTimer(),this.rollForOtters()}getNextResourceTick(e){var t=1;game.upgrades.upgrades.goodcompany.completed&&(t=1+.01*game.resources.resources.pop.v);var s=t*this.resources[e].g*this.resources[e].g_mult*this.resources[e].g_mult_jobs*this.resources[e].g_mult_k;return"food"==e&&(s+=this.resources.pop.v*this.resources.pop.i),s}checkCraftables(e){return this.checkCosts(this.resources[e].cost)?($("#mk"+toTitleCase(e)).addClass("pro"),$("#mk"+toTitleCase(e)).removeClass("dis"),!0):($("#mk"+toTitleCase(e)).removeClass("pro"),$("#mk"+toTitleCase(e)).addClass("dis"),!1)}adjustJoyIntensity(){var e=Math.log((100*this.resources.food.g+1)*this.resources.pop.v)/Math.log(this.resources.joy.i);this.resources.joy.g=this.resources.joy.g_base+e}rollForOtters(){game.settings.ready&&(this.resources.pop.v<this.resources.pop.m&this.getPPS("food")>=-1*this.resources.pop.i?(this.otterTimer>0&&(this.otterTimer-=1e3/game.gameSpeed),this.otterTimer<=0?(this.resources.pop.v+=1,game.community.addOtter(),game.rebuildAllModifications(),this.triggerOtterTimer()):addText("#popResVal",'A new otter arrives in:<br/><span class="joyOdds" id="e">'+sec2time(this.otterTimer/1e3)+"s</span>")):this.resources.pop.v==this.resources.pop.m&this.getPPS("food")>0?addText("#popResVal","Your homes are full up!"):this.getPPS("food")<-1*this.resources.pop.i&this.getPPS("food")>=0?addText("#popResVal",'You need more food to attract pals!<br/>(<span class="popError">'+this.getPPS("food")+"/"+Math.round(-1*this.resources.pop.i*100)/100+" "+getIcon("food")+"/s</span>)"):this.getPPS("food")<0&&(addText("#popResVal","Otters will leave when you run out of food!"),0==this.resources.food.v&&game.community.starveOtter()))}triggerOtterTimer(){this.otterTimer=6e4,game.upgrades.upgrades.evocommunal.completed&&(this.otterTimer*=.5),game.upgrades.upgrades.evangelize.completed&&(this.otterTimer*=.5)}triggerMakeTimer(){this.resConf.makeTimer=this.resConf.makeTimerMax}setOnClicks(){for(name of this.names())if(this.resources[name].craftable){var e=this;$("#mk"+toTitleCase(name)).prop("onclick",null).off("click"),$("#mk"+toTitleCase(name)).click((function(){for(var t=this.id.toLowerCase().substring(2),s=0;s<e.resConf.craftMulti&&e.checkCraftables(t);++s)e.craft(t)}))}else $("#mk"+toTitleCase(name)).prop("onclick",null).off("click"),$("#mk"+toTitleCase(name)).click((function(){var e=this.id.toLowerCase().substring(2);"joy"!=e?game.upgrades.upgrades.supervise.completed?game.addBuff(e+"Direct"):(game.addResource(e),game.settings.updateResourceValues(e)):(game.addBuff("playBuff"),game.settings.updateResourceValues(e))}))}craft(e){this.checkCraftables(e)&&(this.applyCost(this.resources[e].cost),game.addResource(e),game.settings.updateResourceValues(e))}drawResources(){var e="",t="";for(var s of Object.keys(this.resources))if(this.resources[s].visible){var o="",i="";"pop"!=s?o=" <div class='tooltipPPS' id='"+s+"PPS'><span class='pps'></span></div>":i=' id="popResVal"';var a="";this.isCapped(s)&&(a="/<span class='max'>0</span>");var r="\n            <div class='res' id='"+s+"Res'>\n                <div class='bg'></div>\n                <div class='resWrapper'>\n                    <div class='resTitle' id='"+s+"Icon'><div class='icon'>"+this.resources[s].icon+"</div></div>\n                    <div class='resVal'"+i+"><span class='cur'>0</span>"+a+o+"</div>\n                </div>\n            </div>";["joy","gift","pop"].indexOf(s)>-1?e+=r:t+=r}$(".stats #resList").html(e),$(".resources #resList").html(t),this.drawCraftButtons(),game.settings.showMenuAndResources(),this.drawTooltipStem(),this.setOnClicks()}drawCraftButtons(){var e="";game.upgrades.upgrades.makers.completed&&(e+='<div class="makerBox">',e+='<span class="totMkrs">0</span> Maker Crafts Available<br/>',e+='Next Maker Craft: <span class="mkrTimer">0</span>s<br/>',e+="</div>");var t=makeMultiSelectTooltip("craft")+e+'<div class = "actRow">';for(var s of Object.keys(this.resources))if(this.resources[s].craftable){null==this.resConf.makers[s]&&(this.resConf.makers[s]=0);var o="";game.upgrades.upgrades.makers.completed&&(o='<div class="makerSliderContainer"><input type="range" min="0" max="0" value="0" class="kmSlider makerSlider" id="'+s+'MakerSlider">',o+='<div class="bgIcon">Makers: <span id="'+s+'Mkrs">0</span></div>',o+="</div>"),t+="<div class='actCol'>",t+="<div class='actCell'><div class='craftWrapper'><div class='action dis' id='mk"+toTitleCase(s)+"'>",t+="<span class='actionItem name'>"+getIcon(s)+"</span>",t+="</div>"+o+"</div></div>",t+="</div>"}$(".craftContainer").html(t),this.setCraftMulti(),this.setRMaxes(),this.refreshView();var i=this;for(var s of($("#craftMulti").prop("input",null).off(),$("#craftMulti").on("input",(function(){i.resConf.craftMultiVal=$(this).val(),i.resConf.craftMulti=multiValConvert(i.resConf.craftMultiVal),i.resConf.craftMulti<1e5?$("#"+this.id+"Display").html(i.resConf.craftMulti):$("#"+this.id+"Display").html("All")})),Object.keys(this.resources)))this.resources[s].craftable&&($("#"+s+"MakerSlider").prop("input",null).off(),$("#"+s+"MakerSlider").on("input",(function(){var e=this.id.substring(0,this.id.length-11);i.modifyMakerAmount(e,$(this).val())})))}refreshView(){for(var e of Object.keys(this.resConf.makers))this.modifyMakerAmount(e,this.resConf.makers[e]),$("#"+e+"MakerSlider").val(this.resConf.makers[e])}setCraftMulti(){$("#craftMulti").val(this.resConf.craftMultiVal),this.resConf.craftMulti=multiValConvert(this.resConf.craftMultiVal),this.resConf.craftMulti<1e5?$("#craftMultiDisplay").html(this.resConf.craftMulti):$("#craftMultiDisplay").html("All")}modifyMakerTotals(e){var t=Math.floor(e*this.resConf.makerCraftAmt);if(t<this.resConf.makerTot)for(var s of Object.keys(this.resConf.makers))this.resConf.makers[s]>0&&(0==t?this.modifyMakerAmount(s,0,!0):this.modifyMakerAmount(s,Math.floor(t/this.resConf.makerTot*this.resConf.makers[s]),!0));this.resConf.makerTot=t,this.setRMaxes()}modifyMakerAmount(e,t,s=!1){this.resConf.makers[e]=t,$("#"+e+"Mkrs").html(t),this.setMaxes(e),s&&$("#"+e+"MakerSlider").val(t)}setRMaxes(){for(var e of Object.keys(this.resources))this.resources[e].craftable&&this.setMaxes(e)}setMaxes(e=null){if(null!=e)for(var t of Object.keys(this.resConf.makers))$("#"+t+"MakerSlider").attr("max",this.resConf.makerTot-this.getCommitted(t));var s=this.getCommitted();$(".totMkrs").html(this.resConf.makerTot-s)}getCommitted(e=null){var t=0;for(var s of $.map(game.resources.resConf.makers,(function(t,s){return null==e||e!=s?parseInt(t):0})))t+=s;return t}drawTooltipStem(){if(null!=game&&game.settings.ready)for(var e of Object.keys(this.resources)){if("joy"==e){if(addText("#mk"+toTitleCase(e),this.resources[e].description),null!=game){var t=game.buffs.buffs.playBuff.modify.resources.joy.g_mult[1];game.upgrades.upgrades.partytime.completed&&(t+=.05*this.resources.pop.v),$("#mk"+toTitleCase(e)+" #e").html(intToString(t)),addText("#joyPPS",'Modifiers:<hr/><div id="e"></div>');var s=this.resources.joy.g_mult_jobs,o=Math.log((100*this.resources.food.g+1)*this.resources.pop.v)/Math.log(this.resources.joy.i);s=Math.round(100*s)/100,o=Math.round(100*o)/100;var i="<i>Base "+getIcon("food")+"/s</i>: +"+Math.round(1e3*o)/10+"%<br/><i>Playmates</i>: "+printValueAndSign(intToString(100*(s-1)))+"%";this.resources.joy.g_mult>1&&(i+="<br/><i>Multiplier</i>: x"+intToString(this.resources.joy.g_mult)),this.resources.joy.g_mult_k>1&&(i+="<br/><i class='kismetColor'>Kismet</i>: +"+intToString(100*(this.resources.joy.g_mult_k-1))+"%"),$("#joyPPS #e").html(i)}}else{addText("#mk"+toTitleCase(e),this.resources[e].description,this.resources[e].cost),$("#mk"+toTitleCase(e)+" #e").html(intToString(this.resources[e].i));var a=this.resources[e].g,r=this.resources[e].g_mult_jobs,l=this.resources[e].g_mult,n=this.resources[e].g_mult_k,c=0;"food"==e&&(c=this.resources.pop.v*this.resources.pop.i);var d=0;game.upgrades.upgrades.goodcompany.completed&&(d=.01*game.resources.resources.pop.v);var u=[];a>0&&(u=u.concat(["<i>Generators</i>: "+intToString(a)+"/s"])),l>1&&(u=u.concat(["<i>Multiplier</i>: "+intToString(l)])),r>1&&(u=u.concat(["<i>"+game.community.jobs[this.jobRes(e)+"Job"].name+"</i>: x"+intToString(r)])),d>0&&(u=u.concat(["<i>Good Company</i>: +"+intToString(100*d)+"%"])),n>1&&(u=u.concat(['<i class="kismetColor">Kismet</i>: +'+intToString(100*(n-1))+"%"])),c<0&&(u=u.concat(['<span class="neg">'+getIcon("pop")+": "+intToString(c)+"/s</span>"])),addText("#"+e+"PPS","Modifiers:<hr/>"+u.join("<br/>"))}$("#"+e+"Res #"+e+"Icon").length>0&&addText("#"+e+"Res #"+e+"Icon",this.resources[e].hover)}}jobRes(e){return"ore"==e?"stone":e}}class Bldg{constructor(){this.init()}init(){this.buildings={food:{v:1,i:[25],t:"thatch food burrow",cost:{food:16,wood:8,stone:8},costScaling:1.25,description:"Build more food storage.",effect:'+<span id="e">25</span> max '+getIcon("food"),modify:{resources:{food:{m:["add",25]}}},visible:!0,buyable:!0},wood:{v:1,i:[25],t:"thatch wood pen",cost:{food:8,wood:15,stone:10},costScaling:1.25,description:"Build more wood storage.",effect:'+<span id="e">25</span> max '+getIcon("wood"),modify:{resources:{wood:{m:["add",25]}}},visible:!0,buyable:!0},stone:{v:1,i:[25],t:"thatch stone hoard",cost:{food:8,wood:10,stone:15},costScaling:1.25,description:"Build more stone storage.",effect:'+<span id="e">25</span> max '+getIcon("stone"),modify:{resources:{stone:{m:["add",25]}}},visible:!0,buyable:!0},curingchamber:{v:0,i:[250],t:"curing shed",cost:{food:50,wood:30,stone:30},costScaling:1.25,description:"Dry and cure your food for sanitary, long-term storage.",effect:'+<span id="e">25</span> max '+getIcon("food"),modify:{resources:{food:{m:["add",250]}}},visible:!1,buyable:!1},pit:{v:0,i:[25,25,25],t:"thatch storage pit",cost:{food:11,wood:13,stone:13},costScaling:1.25,description:"Build an efficient storage pit to secure your resources.",effect:'+<span id="e">25</span> max '+getIcon("food")+'<br/>+<span id="e">25</span> max '+getIcon("wood")+'<br/>+<span id="e">25</span> max '+getIcon("stone"),modify:{resources:{food:{m:["add",25]},wood:{m:["add",25]},stone:{m:["add",25]},ore:{m:["add",0]}}},visible:!0,buyable:!1},garner:{v:0,i:[500,500,125],t:"Small Garner",logText:"New Building: Garners",cost:{plank:5,block:5},costScaling:1.25,description:"Small, sturdy storehouses that don't hold much, but are easier to build",effect:'+<span id="e">25</span> max '+getIcon("wood")+'<br/>+<span id="e">25</span> max '+getIcon("stone")+'<br/>+<span id="e">25</span> max '+getIcon("ore"),modify:{resources:{wood:{m:["add",500]},stone:{m:["add",500]},ore:{m:["add",125]}}},visible:!1,buyable:!0},foodgen:{v:1,i:[1],t:"shrimp farm",cost:{food:25,stone:10},costScaling:1.66,description:"Populate a food farm to generate more food!",logText:"New Building: Shrimp Farm",effect:'+<span id="e">1</span>/sec '+getIcon("food"),modify:{resources:{food:{g:["add",1]}}},visible:!0,buyable:!0},woodgen:{v:0,i:[1],t:"driftwood dam",cost:{food:10,wood:25,stone:10},costScaling:1.66,description:"Copy the beavers and dam up the river to snag wood!",logText:"New Building: Driftwood Dam",effect:'+<span id="e">1</span>/sec '+getIcon("wood"),modify:{resources:{wood:{g:["add",1]}}},visible:!1,buyable:!0},stonegen:{v:0,i:[1,0],t:"pebble puddles",cost:{food:10,wood:10,stone:25},costScaling:1.66,description:"Search the shoreline for rocks!",logText:"New Building: Pebble Puddles",effect:'+<span id="e">1</span>/sec '+getIcon("stone"),modify:{resources:{stone:{g:["add",1]},ore:{g:["add",0]}}},visible:!1,buyable:!0},home1:{v:0,i:[2],t:"den",cost:{food:100,wood:100,stone:100},costScaling:1.25,description:"The water is cold!<br/>Build a den.",logText:"New Building: Den",effect:'+<span id="e">1</span> max '+getIcon("pop"),modify:{resources:{pop:{m:["add",2]}}},visible:!1,buyable:!0},home2:{v:0,i:[2],t:"cottage",cost:{plank:25,block:25},costScaling:1.25,description:"A pretty riverside cottage",logText:"New Building: Cottage",effect:'+<span id="e">1</span> max '+getIcon("pop"),modify:{resources:{pop:{m:["add",2]}}},visible:!1,buyable:!1},jobmodifier:{v:0,i:[1.5,1.25],t:"gathering grounds",cost:{food:150,wood:125,stone:125},costScaling:3,description:"A place for your otters to congregate. Makes jobs more effective.",logText:"New Building: Gathering Grounds",effect:'x<span id="e">2</span> job effect</br>x<span id="e">1.75</span> '+getIcon("food")+" consumption",req_upg:["evocommunal"],modify:{jobs:{noJob:{"modify,resources,joy,g_mult_jobs,1":["multiply",1.5],"i,0":["multiply",1.5]},foodJob:{"modify,resources,food,g_mult_jobs,1":["multiply",1.5],"i,0":["multiply",1.5]},woodJob:{"modify,resources,wood,g_mult_jobs,1":["multiply",1.5],"i,0":["multiply",1.5]},stoneJob:{"modify,resources,stone,g_mult_jobs,1":["multiply",1.5],"modify,resources,ore,g_mult_jobs,1":["multiply",1.5],"i,0":["multiply",1.5],"i,1":["multiply",1.5]}},resources:{pop:{i:["multiply",1.25]}}},visible:!1,buyable:!0},atelier:{v:0,i:[1.2],t:"atelier",cost:{plank:50,block:50,metal:2},costScaling:1.5,description:"An organized workshop for your busy little Makers.",logText:"New Building: Atelier",effect:'x<span id="e">1.5</span> items per Craft',modify:{resources:{plank:{i:["multiply",1.2]},block:{i:["multiply",1.2]},metal:{i:["multiply",1.2]}}},visible:!0,buyable:!1}},this.resetCopy=JSON.parse(JSON.stringify(this.buildings)),this.populateBuildings()}resetBuildingMetrics(){for(var e of Object.keys(this.buildings))this.buildings[e].i=JSON.parse(JSON.stringify(this.resetCopy[e].i)),this.buildings[e].costScaling=this.resetCopy[e].costScaling,this.buildings[e].modify=JSON.parse(JSON.stringify(this.resetCopy[e].modify)),this.buildings[e].cost=JSON.parse(JSON.stringify(this.resetCopy[e].cost))}rebuildAllCosts(){for(var e of Object.keys(this.buildings))for(var t=0;t<this.buildings[e].v;++t)for(var s of Object.keys(this.buildings[e].cost))this.buildings[e].cost[s]=this.buildings[e].cost[s]*this.buildings[e].costScaling}add(e,t){this.buildings[e].v+=t,this.updatePurchasedCount(e),this.modCosts(e)}setV(e,t){this.buildings[e].v=t}modCosts(e){for(var t of Object.keys(this.buildings[e].cost))this.buildings[e].cost[t]=Math.round(this.buildings[e].cost[t]*this.buildings[e].costScaling);this.drawBuildingTooltip(e)}modIntensity(e,t=1,s=1,o=1){this.buildings[e].i=(this.buildings[e].i*s+t)*o}getTypeName(e){return this.buildings[e].t}getAmt(e){return this.buildings[e].v}getPower(e){return this.buildings[e].i}names(){return Object.keys(this.buildings)}getVisibleBuildings(){return Object.keys(this.buildings).filter(e=>!0===this.buildings[e].visible&!0===this.buildings[e].buyable)}checkEligibility(){var e=!1;for(var t of Object.keys(this.buildings))this.buildings[t].visible||!game.resources.checkCosts(this.buildings[t].cost,.5)||null!=this.buildings[t].req_upg&&!this.buildings[t].req_upg.every(e=>1==game.upgrades.upgrades[e].completed)||(this.buildings[t].visible=!0,null!=this.buildings[t].logText&this.buildings[t].buyable&&addLog(this.buildings[t].logText,"building"),e=!0),game.resources.checkCosts(this.buildings[t].cost)?($("#mk"+toTitleCase(t)+"Bldg").removeClass("dis"),$("#mk"+toTitleCase(t)+"Bldg").addClass("pro")):1==this.buildings[t].visible&&($("#mk"+toTitleCase(t)+"Bldg").removeClass("pro"),$("#mk"+toTitleCase(t)+"Bldg").addClass("dis"));e&&(this.populateBuildings(),this.checkEligibility())}setVisible(e,t){this.buildings[e].visible=t}setBuyable(e,t){this.buildings[e].buyable=t}checkPurchase(e){return game.resources.checkCosts(this.buildings[e].cost)}populateBuildings(){var e=this.getVisibleBuildings();this.draw(e),this.drawBuildingTooltips(e)}draw(e){var t="<div class='actRow'>",s=0;for(s=0;s<e.length;++s)s%2==0&&(t+="<div class='actCol'>"),t+="<div class='actCell'><div class='action dis' id='mk"+toTitleCase(e[s])+"Bldg'>",t+="<span class='actionItem name'>"+toTitleCase(this.buildings[e[s]].t)+"</span>",t+="<span class='bldgValue'>("+Math.round(this.buildings[e[s]].v)+")</span>",t+="</div></div>",s%2==1&&(t+="</div>");s%2==1&&(t+="<div class='actCell'></div></div>"),t+="</div>",$("#buildingsDiv").html(t),this.setOnClicks()}updatePurchasedCount(e){$("#mk"+toTitleCase(e)+"Bldg .bldgValue").html("("+this.buildings[e].v+")")}drawTooltipStem(){var e=this.getVisibleBuildings();this.drawBuildingTooltips(e)}drawBuildingTooltips(e){for(var t=0;t<e.length;++t){var s=e[t];this.drawBuildingTooltip(s)}}drawBuildingTooltip(e){addText("#mk"+toTitleCase(e)+"Bldg",this.buildings[e].description+'<hr/><i id="etext">'+this.buildings[e].effect+"</i>",this.buildings[e].cost);var t=0,s=this;$("#mk"+toTitleCase(e)+"Bldg #eText #e").each((function(){$(this).html(intToString(s.buildings[e].i[t],2)),t+=1}))}setOnClicks(){for(name of this.names())$("#mk"+toTitleCase(name)+"Bldg").prop("onclick",null).off("click"),$("#mk"+toTitleCase(name)+"Bldg").click((function(){var e=this.id.toLowerCase().substring(2,this.id.length-4);game.addBuildingAndMod(e,1),game.settings.updateResources(),e.startsWith("home")&&game.settings.triggerPopulationTab(),$(".mouseTooltip").html($("#"+this.id+" .tooltiptext").html())}))}}class Upgrades{constructor(){this.init()}init(){this.buildUpgradeHash(),this.populateUpgradeTab()}buildUpgradeHash(){this.upgrades={evoadaptable:{name:"Adaptable",description:"Infinite uses of finite resources",effect:"Increase "+getIcon("joy")+" cap to 100.<br/>"+getIcon("food")+'/s affects joy more.<hr/><span class="mastery">Mastery:</span><br/>Cheaper Generators',cost:{joy:5},logText:"You are now more in touch with the environment.",req:null,optional:!1,available:!1,completed:!1,modify:{resources:{joy:{m:["set",100],i:["divide",1e4]}}},cbonus:{buildings:{foodgen:{"cost,food":["multiply",.9],"cost,stone":["multiply",.9]},woodgen:{"cost,food":["multiply",.9],"cost,wood":["multiply",.9],"cost,stone":["multiply",.9]},stonegen:{"cost,food":["multiply",.9],"cost,wood":["multiply",.9],"cost,stone":["multiply",.9]}},description:"Food/Wood/Stone Generators -10% Cost"}},clamhunting:{name:"Clam Hunting",description:"Dig up clams and crack em open with rocks!",effect:"+1 "+getIcon("food")+"/click",cost:{joy:15,wood:10,stone:25},req:["evoadaptable"],optional:!1,available:!1,completed:!1,modify:{resources:{food:{t:"gather clams",i:["add",1]}}}},branches:{name:"Tree Branches",description:"Pick through driftwood for bigger branches.",effect:"+1 "+getIcon("wood")+"/click",cost:{joy:30,wood:25},req:["evoadaptable"],optional:!1,available:!1,completed:!1,modify:{resources:{wood:{t:"collect branches",i:["add",1]}}}},diggingstick:{name:"Digging Stick",description:"You found a great stick with a narrow end, great for digging out bigger stones in the silt!",effect:"+1 "+getIcon("stone")+"/click",cost:{joy:30,wood:35},req:["evoadaptable","branches"],optional:!1,available:!1,completed:!1,modify:{resources:{stone:{t:"collect rocks",i:["add",1]}}}},clamfarms:{name:"Clam Farms",description:"You've developed a taste for clams. Upgrade to clam farms!",effect:"+50% "+getIcon("food")+"/s",cost:{joy:35,food:50,wood:50},req:["evoadaptable","clamhunting"],optional:!1,available:!1,completed:!1,modify:{buildings:{foodgen:{t:"clam farm","i,0":["multiply",1.5],"modify,resources,food,g,1":["multiply",1.5]}}}},biggerdams:{name:"Bolster Dams",description:"Add branches to your dams, making them snag more wood!",effect:"+50% "+getIcon("wood")+"/s",cost:{joy:50,food:50,wood:75},req:["evoadaptable","branches"],optional:!1,available:!1,completed:!1,modify:{buildings:{woodgen:{t:"log jam","i,0":["multiply",1.5],"modify,resources,wood,g,1":["multiply",1.5]}}}},quarries:{name:"Rock Quarries",description:"Pebbles are fun, but rocks are more useful! Search the rocky areas past the shore.",effect:"+50% "+getIcon("stone")+"/s",cost:{joy:50,food:50,stone:75},req:["evoadaptable","diggingstick"],optional:!1,available:!1,completed:!1,modify:{buildings:{stonegen:{t:"rock quarry",description:"Search the rocky areas past the shore.","i,0":["multiply",1.5],"modify,resources,stone,g,1":["multiply",1.5]}}}},pebblejuggling:{name:"Pebble Juggling",description:"Tossing rocks is a really fun game!",effect:"Playing increases "+getIcon("joy")+"/s by x3",cost:{joy:25,stone:50},req:["evoadaptable"],optional:!0,available:!1,completed:!1,modify:{buffs:{playBuff:{"modify,resources,joy,g_mult,1":["set",3]}}}},rockstacking:{name:"Stack Rocks",description:"Stack rocks for longer-lasting fun!",effect:'x3 "Playing!" buff duration',cost:{joy:75,stone:125},req:["evoadaptable","pebblejuggling","diggingstick"],optional:!0,available:!1,completed:!1,modify:{buffs:{playBuff:{duration:["multiply",3]}}}},evocommunal:{name:"Communal",description:"A village is powered by its numbers",effect:"Increase "+getIcon("joy")+' cap to 250.<br/>Unlocks new building.<br/>Otters arrive twice as fast.<hr/><span class="mastery">Mastery:</span><br/>Otters Learn Faster',cost:{joy:100},logText:"Your friends become your family, making the impossible possible.",req:null,req_all:["evoadaptable"],optional:!1,available:!1,completed:!1,modify:{resources:{joy:{m:["set",250]}}},cbonus:{buildings:{foodgen:{"cost,food":["multiply",1]}},description:"x2 Otter Job Exp."}},sharing:{name:"Sharing",description:"Lower food consumption by sharing meals.",effect:'Otters eat <span id="e">30%</span> less '+getIcon("food")+".",cost:{joy:100,food:150},req:["evocommunal"],optional:!1,available:!1,completed:!1,modify:{resources:{pop:{i:["multiply",.7]}}}},aquarotation:{name:"Aqua-Rotation",description:"Bolster food production by rotating generations of farm animals between farms.",effect:"+50% "+getIcon("food")+"/s",cost:{joy:100,food:150},req:["evocommunal"],optional:!1,available:!1,completed:!1,modify:{buildings:{foodgen:{t:"seeded clam farm","i,0":["multiply",1.5],"modify,resources,food,g,1":["multiply",1.5]}}}},partytime:{name:"Party Time!",description:"Everyone plays together!",effect:'+5% "Playing!" effect<br/>per '+getIcon("pop"),cost:{joy:135,food:185,stone:125,wood:85},req:["evocommunal","sharing"],optional:!0,available:!1,completed:!1,modify:{resources:{joy:{t:"play together!"}}}},goodcompany:{name:"Good Company",description:"The more the merrier!",effect:"Each "+getIcon("pop")+' increases resource generation by <span id="e">1</span>%',cost:{joy:115,food:100},req:["evocommunal"],optional:!1,available:!1,completed:!1},snuggleup:{name:"Snuggle Up",description:"Time to get cozy.",effect:"+1 "+getIcon("pop")+"/Den",cost:{joy:150,food:125,stone:85,wood:85},req:["evocommunal","goodcompany"],optional:!1,available:!1,completed:!1,modify:{buildings:{home1:{"i,0":["add",1],t:"cozy den","modify,resources,pop,m,1":["set",3]}}}},experiencegain:{name:"Practice Makes Perfect",description:"You can't do the same thing 8 hours a day without improving.",effect:"Otters earn experience in their jobs over time, improving the job's effects.",cost:{joy:125,food:85,stone:150,wood:150},req:["evocommunal"],optional:!1,available:!1,completed:!1},woodstorage:{name:"Build It Together",description:"With help, you can upgrade your storage buildings using heavier materials!",effect:"Storage +50%.",cost:{joy:150,stone:225,wood:225},req:["evocommunal","experiencegain"],optional:!1,available:!1,completed:!1,modify:{buildings:{food:{"modify,resources,food,m,1":["multiply",2],"i,0":["multiply",2],t:"driftwood food burrow"},wood:{"modify,resources,wood,m,1":["multiply",2],"i,0":["multiply",2],t:"driftwood wood pen"},stone:{"modify,resources,stone,m,1":["multiply",2],"i,0":["multiply",2],t:"driftwood stone hoard"},pit:{"modify,resources,food,m,1":["multiply",2],"modify,resources,wood,m,1":["multiply",2],"modify,resources,stone,m,1":["multiply",2],"i,0":["multiply",2],"i,1":["multiply",2],"i,2":["multiply",2],t:"driftwood storage pit"}}}},managers:{name:"Managers",description:"Let the cream rise to the top!",effect:"Unlocks managers for jobs, who level faster and boost their managed otters' effects.<hr/>Select managers from Community > Pals.",cost:{joy:165,food:85,stone:150,wood:150},req:["evocommunal","experiencegain"],optional:!1,available:!1,completed:!1},evoefficient:{name:"Efficient",description:"Learn to be a well-oiled machine",effect:"Increase "+getIcon("joy")+' cap to 1000.<br/>Occasional timed job-boosting buff.<hr/><span class="mastery">Mastery:</span><br/>More Random Buffs',cost:{joy:250},logText:"You can accomplish great things by being intentional.",req:null,req_all:["evocommunal"],optional:!1,available:!1,completed:!1,modify:{resources:{joy:{m:["set",1e3]}}},cbonus:{buildings:{foodgen:{"cost,food":["multiply",1]}},description:"More Random Buffs, More Frequently"}},centralize:{name:"Centralize",description:"Ditch specialized storage.",effect:"Convert your storage to a single, more efficient building.",cost:{joy:275,food:325,stone:300,wood:300},req:["evoefficient"],optional:!1,available:!1,completed:!1,modify:{buildings:{pit:{buyable:!0},food:{buyable:!1},wood:{buyable:!1},stone:{buyable:!1}}}},organize:{name:"Organize",description:"Use more of your pit space by stacking resources higher!",effect:"1.5x pit storage",cost:{joy:250,food:400,stone:500,wood:500},req:["evoefficient","centralize"],optional:!1,available:!1,completed:!1,modify:{buildings:{pit:{"modify,resources,food,m,1":["multiply",1.5],"modify,resources,wood,m,1":["multiply",1.5],"modify,resources,stone,m,1":["multiply",1.5],"i,0":["multiply",1.5],"i,1":["multiply",1.5],"i,2":["multiply",1.5]}}}},supervise:{name:"Supervise",description:"Your time is wasted manually gathering, use it to direct workers.",effect:"Instead of clicking, you now buff one resource at a time.",cost:{joy:500,food:415,stone:450,wood:440},req:["evoefficient"],optional:!1,available:!1,completed:!1,modify:{resources:{food:{t:"Direct Aquafarmers",description:"Oversee the Aquafarmers to improve their yields."},wood:{t:"Direct Loggers",description:"Oversee the Loggers to drag more wood from the river."},stone:{t:"Direct Miners",description:"Oversee the Miners to spot better rocks."}}}},acclimatize:{name:"Acclimatize",description:"Your otters are getting more comfortable with their jobs!",effect:"x4 "+getIcon("pop")+" Exp. Gain",cost:{joy:625,food:580,stone:550,wood:550},req:["evoefficient"],optional:!0,available:!1,completed:!1},naturesprize:{name:"Nature's Prize",description:"The world provides for you, and for that, you are thankful.",effect:"+25% generator performance",cost:{joy:750,food:825,stone:900,wood:900},modify:{buildings:{foodgen:{"i,0":["multiply",1.25],"modify,resources,food,g,1":["multiply",1.25]},woodgen:{"i,0":["multiply",1.25],"modify,resources,wood,g,1":["multiply",1.25]},stonegen:{"i,0":["multiply",1.25],"modify,resources,stone,g,1":["multiply",1.25]}}},req:["evoefficient","acclimatize"],optional:!1,available:!1,completed:!1},aestheticize:{name:"Aestheticize",description:"Placing little pebble statues around your village makes everything so pretty!",effect:'x10 "Playing!" buff duration',cost:{joy:500,stone:1e3},req:["evoefficient"],optional:!0,available:!1,completed:!1,modify:{buffs:{playBuff:{duration:["multiply",10]}},resources:{joy:{g_mult:["multiply",1.5]}}}},evangelize:{name:"Evangelize",description:"Your pals help convince new otters to join your family!",effect:"Additional -50% "+getIcon("pop")+" arrival rate",cost:{joy:850,food:1e3},req:["evoefficient","supervise"],optional:!1,available:!1,completed:!1},prioritize:{name:"Prioritize",description:"When inspired, you've learned to focus on the things that matter!",effect:'x2 duration all temporary buffs besides "Playing!".',cost:{joy:900,food:900,stone:800,wood:850},modify:{buffs:{jobBuff:{duration:["multiply",2]},joyBuff:{duration:["multiply",2]},bldgBuff:{duration:["multiply",2]}}},req:["evoefficient","acclimatize"],optional:!0,available:!1,completed:!1},evosapience:{name:"Sapient",description:"I am Otter",effect:"Increase "+getIcon("joy")+' cap to 5000<br/>Unlocks Karma<hr/><span class="mastery">Mastery:</span><br/>Faster, Larger Gifts',cost:{joy:1e3},req:null,req_all:["evoefficient"],optional:!1,available:!1,completed:!1,logText:"A craving for knowledge stirs.",modify:{resources:{joy:{m:["set",5e3]},gift:{visible:!0}}},cbonus:{flotillaConfig:{conf:{timerReset:["multiply",.5],max:["multiply",5]}},description:"50% Flotilla Timer<br/>5x Flotilla Size<br/>Flotilla Kismet Bonuses"}},language:{name:"Language",description:"Chirps and squeals can get the basic point across, but words have significantly more impact.",effect:"+25% Direct buff power",cost:{joy:1250,food:1e3},req:["evosapience"],modify:{buffs:{foodDirect:{"modify,resources,food,g_mult_jobs,1":["multiply",1.25]},woodDirect:{"modify,resources,wood,g_mult_jobs,1":["multiply",1.25]},stoneDirect:{"modify,resources,stone,g_mult_jobs,1":["multiply",1.25]}}},optional:!0,available:!1,completed:!1},stonework:{name:"Stonework",description:"With some heavy lifting, we can build better storage.",effect:"x3 storage",cost:{joy:1500,stone:1500},modify:{buildings:{pit:{"modify,resources,food,m,1":["multiply",3],"modify,resources,wood,m,1":["multiply",3],"modify,resources,stone,m,1":["multiply",3],"i,0":["multiply",3],"i,1":["multiply",3],"i,2":["multiply",3],t:"stone storage cache"}}},req:["evosapience"],optional:!1,available:!1,completed:!1},curingchamber:{name:"Curing Shed",description:"Move food to their own, more efficient building, freeing up space for more raw resources!",effect:"Adds Curing Sheds and increases Storage Cache caps by 50%",cost:{joy:2500,stone:1500,wood:2900},modify:{buildings:{pit:{"modify,resources,food,m,1":["zero",0],"modify,resources,wood,m,1":["multiply",1.5],"modify,resources,stone,m,1":["multiply",1.5],"modify,resources,ore,m,1":["set",10],effect:'+<span id="e">25</span> max '+getIcon("wood")+'<br/>+<span id="e">25</span> max '+getIcon("stone"),"i,0":["multiply",1.5],"i,1":["multiply",1.5],"i,2":["set",10]},curingchamber:{buyable:!0,visible:!0}},resources:{ore:{visible:!0}}},req:["evosapience","stonework"],optional:!1,available:!1,completed:!1},pickaxe:{name:"Pickaxe",description:"Wood, stone, tough river reeds, and cleverness are the real tool.",effect:"+50% "+getIcon("stone")+"/sec",cost:{joy:1500,wood:1280,stone:1300},modify:{buildings:{stonegen:{"i,0":["multiply",1.5],"modify,resources,stone,g,1":["multiply",1.5]}}},req:["evosapience"],optional:!1,available:!1,completed:!1},hatchet:{name:"Hatchet",description:"Working the quarries is easy now! I wonder if those trees aren't so tough now...",effect:"+50% "+getIcon("wood")+"/sec",cost:{joy:2e3,wood:1300,stone:1280},modify:{buildings:{woodgen:{t:"timberland",description:"A marked clearing for harvesting trees.","i,0":["multiply",1.5],"modify,resources,wood,g,1":["multiply",1.5]}}},req:["evosapience","pickaxe"],optional:!1,available:!1,completed:!1},aquadiversity:{name:"Aqua-Diversity",description:"Upgrade to diverse aquafarms so your otters can dine on fish, shrimp, clams... Whatever they can get their hands on!",effect:"+50% "+getIcon("food")+"/sec",cost:{joy:3e3,food:2e3},modify:{buildings:{foodgen:{t:"aquafarm","i,0":["multiply",1.5],"modify,resources,food,g,1":["multiply",1.5]}}},req:["evosapience"],optional:!1,available:!1,completed:!1},deepmining:{name:"Deep Mining",description:"With your new tools, you can now dig deeper into the quarries.",effect:"Quarries become Mines, additionally producing small amounts of "+getIcon("ore")+".",cost:{joy:3500,wood:1800,stone:2500},modify:{buildings:{stonegen:{t:"Mine","i,0":["multiply",1.5],"i,1":["set",.01],"modify,resources,ore,g,1":["set",.1],effect:'+<span id="e">1</span>/sec '+getIcon("stone")+'<br/> +<span id="e">1</span>/sec '+getIcon("ore")},pit:{effect:'+<span id="e">25</span> max '+getIcon("wood")+'<br/>+<span id="e">25</span> max '+getIcon("stone")+'<br/>+<span id="e">25</span> max '+getIcon("ore")}}},req:["evosapience","pickaxe","curingchamber"],optional:!1,available:!1,completed:!1},wellfed:{name:"Well Fed",description:"3 square meals a day makes work much easier!",effect:getIcon("food")+" requirement removed from most buildings, but Otter consumption is tripled.",cost:{joy:4e3,food:5e3},modify:{buildings:{woodgen:{"cost,food":["zero",0]},stonegen:{"cost,food":["zero",0]},pit:{"cost,food":["zero",0]},home1:{"cost,food":["zero",0]},jobmodifier:{"cost,food":["zero",0]}},resources:{pop:{i:["multiply",3]}}},req:["evosapience","curingchamber"],optional:!1,available:!1,completed:!1},evocreative:{name:"Creative",description:"Shape the world to meet your needs",effect:"Increase "+getIcon("joy")+' cap to 50K<br/>Unlocks Crafting<hr/><span class="mastery">Mastery:</span><br/>Better Crafting Building',cost:{joy:5e3},modify:{resources:{joy:{m:["set",5e4]},plank:{visible:!0},block:{visible:!0},metal:{visible:!0}}},logText:"Tools are an extension of the body.",req_all:["evosapience"],optional:!1,available:!1,completed:!1,cbonus:{buildings:{atelier:{"modify,resources,plank,i,1":["set",1.3],"modify,resources,block,i,1":["set",1.3],"modify,resources,metal,i,1":["set",1.3],"i,0":["set",1.3]}},description:"Improved Ateliers<br/>Crafting Kismet Bonuses"}},makerspace:{name:"Maker Spaces",description:"Dedicated places to work, clear of distractions, produce the finest wares.",effect:"Unlocks Ateliers, buildings which increase crafting effectiveness",cost:{joy:1e4,plank:100,block:100,metal:5},modify:{buildings:{atelier:{buyable:!0}}},req:["evocreative"],optional:!1,available:!1,completed:!1},makers:{name:"Makers",description:"The only job that might be better than being a Playmate!",effect:"Unlocks Makers, Otters that can Craft for you!",cost:{joy:21e3,food:5e3,metal:10},modify:{jobs:{makeJob:{buyable:!0}}},req:["evocreative","makerspace"],optional:!1,available:!1,completed:!1},toughertools:{name:"Tougher Tools",description:"A stronger pickaxe makes for easier work and richer bounties.",effect:"Ore is minorly affected by the Miner job",cost:{joy:18e3,plank:25,metal:1},modify:{jobs:{stoneJob:{"modify,resources,ore,g_mult_jobs,1":["add",.00625],"i,1":["add",.00625],effect:'+<span id="e">10</span>% '+getIcon("stone")+'/s<br/>+<span id="e">10</span>% '+getIcon("ore")+"/s"}},buffs:{stoneDirect:{"modify,resources,ore,g_mult_jobs,1":["multiply",2]}}},req:["evocreative"],optional:!1,available:!1,completed:!1},tougherstorage:{name:"Tougher Storage",description:"Blow out those old stone walls and replace your Caches and Sheds with Metal!",effect:"Storage Cache x5<br/>Curing Shed x3",cost:{joy:3e4,plank:250,metal:25},modify:{buildings:{curingchamber:{"modify,resources,food,m,1":["multiply",3],"i,0":["multiply",3],t:"Metal Curing Shed"},pit:{"modify,resources,wood,m,1":["multiply",5],"modify,resources,stone,m,1":["multiply",5],"modify,resources,ore,m,1":["multiply",5],"i,0":["multiply",5],"i,1":["multiply",5],"i,2":["multiply",5],t:"Metal Storage Cache"}}},req:["evocreative","toughertools"],optional:!1,available:!1,completed:!1},operationalefficiency:{name:"Operational Efficiency",description:"If you stop by the flotilla while hauling goods, you can really speed up gifting!",effect:"When a resource is capped, it is automatically loaded onto the flotilla",cost:{joy:2e4,food:6e3,stone:15e3,wood:15e3},req:["evocreative"],optional:!1,available:!1,completed:!1},waitingfor:{name:"What Are You Waiting For?!",description:"Give your Ottermates the confidence they need to Gift without guidance.",effect:"The flotilla automatically departs when full and the timer is up",cost:{joy:35e3,food:7e3,plank:200},req:["evocreative","operationalefficiency"],optional:!1,available:!1,completed:!1},bespokehomes:{name:"Bespoke Homes",description:"Your village's popularity is astounding. Seal the deal with gorgeous homes!",effect:"Unlock Cottages, a new "+getIcon("otter")+" building",cost:{joy:4e4,food:7e3,plank:200},modify:{buildings:{home2:{buyable:!0}}},req:["evocreative","operationalefficiency"],optional:!1,available:!1,completed:!1},betterdesigns:{name:"Better Designs",description:"Repeatable blueprints make for sturdier, cheaper buildings without compromising beauty.",effect:"Your original buildings are much cheaper",cost:{joy:45e3,plank:350,block:500,metal:35},modify:{buildings:{pit:{costScaling:["multiply",.95]},foodgen:{costScaling:["multiply",.95]},woodgen:{costScaling:["multiply",.95]},stonegen:{costScaling:["multiply",.95]},home1:{costScaling:["multiply",.95]},jobmodifier:{costScaling:["multiply",.95]}}},req:["evocreative","tougherstorage"],optional:!1,available:!1,completed:!1}},this.resetCopy=JSON.parse(JSON.stringify(this.upgrades))}allDone(){return 0==this.getUpgradesByCompletion(!1).length}checkPurchase(e){return game.resources.checkCosts(this.upgrades[e].cost)}updateAvailableUpgrades(){var e=this.getUpgradesByCompletion(!0);for(var t of this.getUpgradesByCompletion(!1))this.upgrades[t].available||null!=this.upgrades[t].req&&!this.upgrades[t].req.every(t=>e.includes(t))||null!=this.upgrades[t].req_all&&!this.upgrades[t].req_all.every(e=>this.eraComplete(e,!1))||(this.upgrades[t].available=!0)}eraComplete(e,t=!0){var s=this.getCurAndMaxOfCategory(e,t);return s[0]==s[1]}setCompleted(e,t){this.upgrades[e].completed=t}checkEligibility(){var e=!1;for(var t of this.getAvailableUpgrades(!0))game.resources.checkCosts(this.upgrades[t].cost)?($("#upgradeId"+toTitleCase(t)).removeClass("dis"),$("#upgradeId"+toTitleCase(t)).addClass("pro"),e=!0):($("#upgradeId"+toTitleCase(t)).removeClass("pro"),$("#upgradeId"+toTitleCase(t)).addClass("dis"));if(e){if($("#upgBtn").addClass("menuGlow"),"none"==$("#upgBtn").css("display")&&!(game.upgrades.getUpgradesByCompletion(!0).length>0)){$("#upgBtn").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)}$("#upgBtn").css("display","block")}else $("#upgBtn").removeClass("menuGlow");return e}getUpgradesByCompletion(e){return Object.keys(this.upgrades).filter(t=>this.upgrades[t].completed===e)}getAvailableUpgrades(e){return Object.keys(this.upgrades).filter(t=>this.upgrades[t].available===e&&!1===this.upgrades[t].completed)}getCompletedEras(){return Object.keys(this.upgrades).filter(e=>!0===this.upgrades[e].completed&&e.startsWith("evo"))}populateUpgradeTab(){this.updateAvailableUpgrades();var e=this.getAvailableUpgrades(!0),t=this.getUpgradesByCompletion(!0),s=this.getCompletedEras();this.draw(e,"availableUpgrades",!0),this.draw(t,"completedUpgrades",!1),this.drawUpgradeTooltips(e.concat(t)),this.drawCompletionBonus(s)}draw(e,t){if("availableUpgrades"==t){var s="<div class='actRow'>",o=0,i=0,a=["",""],r=0;if(this.allDone())s="<div class='actCell'><div class='allDone'>Stay Tuned for the Next Patch!</div></div></div>";else{for(o=0;o<e.length;++o)e[o].startsWith("evo")?(a[r=0]+="<div class='actCol'>",a[r]+="<div class='actCell'><div class='action dis evo' id='upgradeId"+toTitleCase(e[o])+"'>",a[r]+="<span class='actionItem'>"+this.upgrades[e[o]].name+"</span>",a[r]+="</div></div>",a[r]+="</div>",i+=1):(r=1,(o+i)%2==0&&(a[r]+="<div class='actCol'>"),a[r]+="<div class='actCell'><div class='action dis' id='upgradeId"+toTitleCase(e[o])+"'>",a[r]+="<span class='actionItem'>"+this.upgrades[e[o]].name+"</span>",a[r]+="</div></div>",(o+i)%2==1&&(a[r]+="</div>"));(o+i)%2==1&&(a[1]+="<div class='actCell'></div></div>"),s+=a[0]+a[1]+"</div>"}$("#"+t).html(s)}else{var l=this.getUpgradesByCompletion(!0).filter(e=>e.startsWith("evo")),n=0;s="";for(var c of l){n%3==0&&(s+="<div class='actCol'>"),s+="<div class='actRow upgCompleteElement'>",s+="<div class='actCol'>",s+="<div class='actCell'><div class='action dis evo' id='upgradeId"+toTitleCase(c)+"'>",s+="<div class='actionItem'>"+this.upgrades[c].name+"</div>",s+="</div></div></div>";o=0;for(var d of e)d.startsWith("evo")||this.upgrades[d].req.includes(c)&&(o%2==0&&(s+="<div class='actCol'>"),s+="<div class='actCell'><div class='action dis' id='upgradeId"+toTitleCase(d)+"'>",s+="<div class='actionItem'>"+this.upgrades[d].name+"</div>",s+="</div></div>",o%2==1&&(s+="</div>"),o+=1);o%2==1&&(s+="<div class='actCell'></div></div>");var u=this.getCurAndMaxOfCategory(c),f="";u[0]==u[1]&&(f=" setFinished"),s+="<div class='upgCatValue"+f+"' id='bonus"+toTitleCase(c)+"'>"+u[0]+" / "+u[1]+"</div></div>",n%3==2&&(s+="</div>"),n+=1}if(n%3!=0)for(var m=0;m<3-n%3;++m)s+="<div class='actRow upgCompleteElement uCFiller'></div>";s+="</div>",$("#"+t).html(s)}this.setOnClicks()}getCurAndMaxOfCategory(e,t=!0){var s=0,o=0;for(var i of Object.keys(this.upgrades))i.startsWith("evo")||this.upgrades[i].req.includes(e)&&(!t&&this.upgrades[i].optional||(o+=1,this.upgrades[i].completed&&(s+=1)));return[s,o]}setOnClicks(){var e=this.getAvailableUpgrades(!0);for(var t of e)$("#upgradeId"+toTitleCase(t)).prop("onclick",null).off("click"),$("#upgradeId"+toTitleCase(t)).click((function(){var e=this.id.toLowerCase().substring(9);game.buyUpgrade(e)}))}drawTooltipStem(){var e=this.getAvailableUpgrades(!0),t=this.getAvailableUpgrades(!1),s=this.getCompletedEras();this.drawUpgradeTooltips(e.concat(t)),this.drawCompletionBonus(s)}drawUpgradeTooltips(e){for(var t=0;t<e.length;++t){var s=e[t];this.drawUpgradeTooltip(s)}}drawUpgradeTooltip(e){var t=null;this.upgrades[e].completed||(t=this.upgrades[e].cost);var s="";e.startsWith("evo")&&(s='<div class="trait">TRAIT</div><div class="traitTitle">'+this.upgrades[e].name+"</div><hr/>"),addText("#upgradeId"+toTitleCase(e),s+this.upgrades[e].description+"<hr/><i>"+this.upgrades[e].effect+"</i>",t)}drawCompletionBonus(e){for(var t=0;t<e.length;++t)addText("#bonus"+toTitleCase(e[t]),'<span class="bonusIncomplete">'+this.upgrades[e[t]].cbonus.description+"</span>")}}class Karma{constructor(){this.init()}init(){this.buildKarmaHash()}buildKarmaHash(){this.kismet={camaraderie:{name:"Camaraderie",description:"The reward of building society is other Otters.",effect:'Multiplicative <span class="e">1</span>% bonus on Joy generation',v:0,i:1.01,cost:{gift:1},costScaling:1.5,"one-time":!1,req:["evosapience"],visible:!0,modify:{resources:{joy:{g_mult_k:["multiply",1.01]}}}},benevolence:{name:"Benevolence",description:"To give is to make someone else's world more plentiful.",effect:'Multiplicative <span class="e">1</span>% bonus on all generators',v:0,i:1.01,cost:{gift:5},costScaling:1.5,"one-time":!1,req:["evosapience"],visible:!0,modify:{resources:{food:{g_mult_k:["multiply",1.01]},wood:{g_mult_k:["multiply",1.01]},stone:{g_mult_k:["multiply",1.01]},ore:{g_mult_k:["multiply",1.01]}}}},trust:{name:"Trust",description:"We all go farther when we can rely on each other.",effect:'Multiplicative <span class="e">5</span>% bonus on Direct buffs',v:0,i:1.05,cost:{gift:15},costScaling:1.5,"one-time":!1,req:["evosapience"],visible:!0,modify:{buffs:{foodDirect:{"modify,resources,food,g_mult_jobs,1":["multiply",1.05]},woodDirect:{"modify,resources,wood,g_mult_jobs,1":["multiply",1.05]},stoneDirect:{"modify,resources,stone,g_mult_jobs,1":["multiply",1.05]}}}},generosity:{name:"Generosity",description:"A kind gesture can reach a wound that only compassion can heal.",effect:'Multiplicative +<span class="e">25</span>% Flotilla Size',v:0,i:1.25,cost:{gift:50},costScaling:2,"one-time":!1,req_all:["evosapience"],visible:!1,modify:{flotillaConfig:{conf:{max:["multiply",1.25]}}}},selflessness:{name:"Selflessness",description:"Give to the world the best you have. And the best will come back to you.",effect:'Multiplicative -<span class="e">5</span>% Flotilla Timer',v:0,i:.95,cost:{gift:80},costScaling:2,"one-time":!1,req_all:["evosapience"],visible:!1,modify:{flotillaConfig:{conf:{timerReset:["multiply",.95]}}}},passion:{name:"Passion",description:"When you love what you do, the time passes instantly.",effect:'Multiplicative -<span class="e">10</span>% Maker Craft Timer',v:0,i:.95,cost:{gift:100},costScaling:2,"one-time":!1,req_all:["evocreative"],visible:!0,modify:{resConf:{conf:{makeTimerMax:["multiply",.9]}}}},dedication:{name:"Dedication",description:"Putting your whole self into your craft makes it a part of you.",effect:'+<span class="e">0.5</span> Maker Crafts per Maker per Craft Timer',v:0,i:.5,cost:{gift:200},costScaling:2,"one-time":!1,req_all:["evocreative"],visible:!1,modify:{resConf:{conf:{makerCraftAmt:["add",.5]}}}}},this.gift={},this.flotillaConfig={max:1e4,timer:0,timerReset:3e5,checked:[],activeView:"give",lastSend:{}},this.resetCopy=JSON.parse(JSON.stringify(this.kismet)),this.resetCopyConfig=JSON.parse(JSON.stringify(this.flotillaConfig))}resetKarmaMetrics(){for(var e of Object.keys(this.kismet))this.kismet[e].costScaling=this.resetCopy[e].costScaling,this.kismet[e].modify=JSON.parse(JSON.stringify(this.resetCopy[e].modify)),this.kismet[e].cost=JSON.parse(JSON.stringify(this.resetCopy[e].cost));for(var t of Object.keys(this.flotillaConfig))"max"!=t&&"timerReset"!=t||(this.flotillaConfig[t]=JSON.parse(JSON.stringify(this.resetCopyConfig[t])))}setV(e,t){this.kismet[e].v=t}setVisible(e,t){this.kismet[e].visible=t}add(e,t){this.kismet[e].v+=t}rebuildAllCosts(){for(var e of Object.keys(this.kismet))for(var t=0;t<this.kismet[e].v;++t)for(var s of Object.keys(this.kismet[e].cost))this.kismet[e].cost[s]=this.kismet[e].cost[s]*this.kismet[e].costScaling}populateKarmaTab(){this.draw(),this.drawChecked(),this.setView(this.flotillaConfig.activeView)}draw(){this.drawGive(),this.drawKismet(),this.setOnClicks(),this.drawTooltipStem(),this.modifyFlotillaBars()}drawGive(){var e='<div class="karmaResources"><div class="chPara">Send a gift flotilla drifting downriver!</div>';e+='<div class="actCol flotillaMax"><div class="actCell"><div class="action pro" id="checkAllF">Check All</div></div>',e+='<div class="actCell"><div class="action pro" id="uncheckAllF">Uncheck All</div></div></div>',this.resourceSliders=[],e+='<div class="actRow kmResContainer">';var t=0;for(var s of Object.keys(game.resources.resources)){if(game.resources.resources[s].giftable&&game.resources.resources[s].m>0)t%2==0&&(e+="<div class='actCol'>"),e+='<div class="actCell"><div class="kmRes" id="'+s+'KM"><div class="checkBoxF cBox inactive" id="'+s+'Chk"></div>',e+='<div class="bgIcon"><div class="kmResInfo donate"><span>0</span></div>',e+='<div class="kmResInfo">'+getIcon(s)+"</div>",e+='<div class="kmResInfo receive">Karma: <span>0</span></div></div>',e+='<input type="range" min="0" max="'+game.resources.resources[s].m+'" value="0" class="kmSlider" id="'+s+'KMSlider">',e+="</div></div>",this.resourceSliders=this.resourceSliders.concat([s]),t%2==1&&(e+="</div>"),t+=1}t%2==1&&(e+="<div class='actCell'></div></div>"),e+="</div>",e+='<div class="chPara small">These buttons set the checked resources above!</div>',e+='<div class="actCol flotillaMax"><div class="actCell"><div class="action pro" id="setToNoneF">None</div></div>',e+='<div class="actCell"><div class="action pro" id="setToCurrentF">Current</div></div>',e+='<div class="actCell"><div class="action pro" id="setToMaxF">Max</div></div></div>',e+='<div class="actCol flotilla"><div class="actCell"><div class="fancylink" id="addToFlotilla">Add</div></div>',e+='<div class="actCell flotillaStatus"><div class="bg"></div><div class="resWrapper"><div class="flotillaFull"><span>0</span>% Full</div></div></div>',e+='<div class="actCell"><div class="flotillaReady"><div class="fancylink" id="sendFlotilla"><span class="e">Send!</span></div></div></div>',e+="</div>",$("#giveView").html(e),this.setCurrentSliders()}drawKismet(){var e='<div class="chPara">Cosmic balance from your philanthropy!</div>';e+='<div class="kismetUpgrades">';var t=game.upgrades.getUpgradesByCompletion(!0);for(var s of Object.keys(this.kismet))if((null==this.kismet[s].req||this.kismet[s].req.every(e=>t.includes(e)))&&(null==this.kismet[s].req_all||this.kismet[s].req_all.every(e=>game.upgrades.eraComplete(e,!1)))){var o="Level "+this.kismet[s].v,i=0;if("dedication"!=s)i=100*(Math.pow(this.kismet[s].i,this.kismet[s].v)-1);else i=this.kismet[s].i*this.kismet[s].v;i=i>0?"+"+intToString(i):intToString(i),"dedication"!=s&&(i+="%"),0==this.kismet[s].v&&(i=""),0==this.kismet[s].v&&(o=""),e+='<div class="action dis" id="'+s+'Kismet">',e+='<div class="actionItem kLevel">'+o+"</div>",e+='<div class="actionItem">'+this.kismet[s].name+"</div>",e+='<div class="actionItem kEffect">'+i+"</div>",e+="</div>"}e+="</div>",$("#kismetView").html(e)}tick(){for(var e of this.resourceSliders)if(parseInt($("#"+e+"KMSlider").val())<=game.resources.resources[e].v?$("#"+e+"KM .donate span").css("color","rgb(0,238,0)"):$("#"+e+"KM .donate span").css("color","#f99"),game.upgrades.upgrades.operationalefficiency.completed&&null==game.resources.resources[e].craftable&game.resources.resources[e].m<=game.resources.resources[e].v&!this.flotillaCapped()){var t=game.resources.getNextResourceTick(e);this.addResourcesToFlotilla(e,t*(1/game.gameSpeed))}this.flotillaConfig.timer>0&&(this.flotillaConfig.timer-=1e3/game.gameSpeed),this.checkSend()}checkEligibility(){for(var e of Object.keys(this.kismet))game.resources.checkCosts(this.kismet[e].cost)?($("#"+e+"Kismet").removeClass("dis"),$("#"+e+"Kismet").addClass("pro")):1==this.kismet[e].visible&&($("#"+e+"Kismet").removeClass("pro"),$("#"+e+"Kismet").addClass("dis"))}checkPurchase(e){return game.resources.checkCosts(this.kismet[e].cost)}checkSend(){this.flotillaConfig.timer<=0?$("#giftBtn").addClass("menuGlow"):$("#giftBtn").removeClass("menuGlow"),this.flotillaConfig.timer<=0&this.flotillaCapped()?game.upgrades.upgrades.waitingfor.completed?this.sendFlotilla():($("#sendFlotilla .e").html("Send!"),$("#sendFlotilla").removeClass("disabled"),this.updateSendTooltip("Send the flotilla downriver!")):($("#sendFlotilla").addClass("disabled"),this.flotillaConfig.timer>0?($("#sendFlotilla .e").html(sec2time(this.flotillaConfig.timer/1e3)),this.updateSendTooltip("Your otters are still preparing the flotilla!")):($("#sendFlotilla .e").html("Waiting"),this.updateSendTooltip("You need to fill the flotilla first!"))),this.flotillaCapped()?$("#addToFlotilla").addClass("disabled"):$("#addToFlotilla").removeClass("disabled")}updateSendTooltip(e){0==$("#sendFlotilla .tooltipText").length|$("#sendFlotilla .tooltipText").html()!=e&&addText("#sendFlotilla",e)}addResourcesToFlotilla(e=null,t=null){var s=!0,o=[];if(null==e)for(var i of this.resourceSliders)if(parseInt($("#"+i+"KMSlider").val())<=game.resources.resources[i].v)o=o.concat([[i,parseInt($("#"+i+"KMSlider").val())]]);else{s=!1;var a=$("#"+i+"KMSlider");for(var r of($(a).stop(!0,!0),[1,2,3]))$(a).animate({backgroundColor:"#900",borderColor:"#400"},75).animate({backgroundColor:"rgb(0,0,75)",borderColor:"#000"},75)}else o=o.concat([[e,t]]);if(s&!this.flotillaCapped())for(var l of o=this.capContribution(o))null==this.gift[l[0]]?this.gift[l[0]]=l[1]:this.gift[l[0]]+=l[1],null==e&&game.resources.add(l[0],-1*l[1]);this.modifyFlotillaBars()}flotillaCapped(){var e=0;for(var t of Object.keys(this.gift))e+=this.gift[t];return e>=this.flotillaConfig.max}capContribution(e){var t=e.map(e=>e[1]).reduce((function(e,t){return e+t}),0),s=0;for(var o of Object.keys(this.gift))s+=this.gift[o];var i=(this.flotillaConfig.max-s)/t;if(i<1)for(var o in e)e[o][1]*=i;return e}sendFlotilla(){var e=0;for(var t of Object.keys(this.gift))e+=game.resources.resources[t].g_value*this.gift[t];game.resources.add("gift",e),this.gift={},this.modifyFlotillaBars(),this.checkSend(),this.flotillaConfig.timer=this.flotillaConfig.timerReset,addLog("Your gift has earned you "+intToString(e)+" karma.","karma")}getCurrentSliders(){for(var e of(this.flotillaConfig.lastSend={},this.resourceSliders))this.flotillaConfig.lastSend[e]=$("#"+e+"KMSlider").val()}setCurrentSliders(){for(var e of Object.keys(this.flotillaConfig.lastSend))$("#"+e+"KMSlider").val(this.flotillaConfig.lastSend[e]),this.updateResourcePayload(e)}modifyFlotillaBars(){var e=0;for(var t of Object.keys(this.gift))e+=this.gift[t];var s=100*e/this.flotillaConfig.max;$(".flotillaStatus .bg").css("width",s+"%"),$(".flotillaStatus span").html(intToString(s))}setView(e){$(".kmTab").removeClass("active"),$("#"+e+"Btn").addClass("active"),$(".kmView").css("display","none"),$("#"+e+"View").css("display","block")}setOnClicks(){var e=this;for(var t of($("#giveBtn").prop("onclick",null).off("click"),$("#giveBtn").click((function(){e.setView("give"),e.flotillaConfig.activeView="give"})),$("#kismetBtn").prop("onclick",null).off("click"),$("#kismetBtn").click((function(){e.setView("kismet"),e.flotillaConfig.activeView="kismet"})),this.resourceSliders))$("#"+t+"KMSlider").prop("input",null).off(),$("#"+t+"KMSlider").prop("change",null).off(),$("#"+t+"KMSlider").on("input",(function(){var t=this.id.substring(0,this.id.length-8);e.updateResourcePayload(t)})),$("#"+t+"KMSlider").on("change",(function(){e.getCurrentSliders()})),$("#"+t+"Chk").prop("onclick",null).off("onclick"),$("#"+t+"Chk").click((function(){var t=this.id.substring(0,this.id.length-3);e.modChecked(t),e.drawChecked()}));for(var s of($("#addToFlotilla").prop("onclick",null).off("click"),$("#addToFlotilla").click((function(){e.flotillaCapped()||e.addResourcesToFlotilla()})),$("#sendFlotilla").prop("onclick",null).off("click"),$("#sendFlotilla").click((function(){e.flotillaCapped()&e.flotillaConfig.timer<=0&&e.sendFlotilla()})),$("#checkAllF").prop("onclick",null).off("click"),$("#checkAllF").click((function(){e.flotillaConfig.checked=e.resourceSliders,e.drawChecked()})),$("#uncheckAllF").prop("onclick",null).off("click"),$("#uncheckAllF").click((function(){e.flotillaConfig.checked=[],e.drawChecked()})),$("#setToNoneF").prop("onclick",null).off("click"),$("#setToNoneF").click((function(){for(var t of e.flotillaConfig.checked)$("#"+t+"KMSlider").val(0),e.updateResourcePayload(t);e.getCurrentSliders()})),$("#setToMaxF").prop("onclick",null).off("click"),$("#setToMaxF").click((function(){for(var t of e.flotillaConfig.checked)$("#"+t+"KMSlider").val(game.resources.resources[t].m),e.updateResourcePayload(t);e.getCurrentSliders()})),$("#setToCurrentF").prop("onclick",null).off("click"),$("#setToCurrentF").click((function(){for(var t of e.flotillaConfig.checked)$("#"+t+"KMSlider").val(game.resources.resources[t].v),e.updateResourcePayload(t);e.getCurrentSliders()})),Object.keys(this.kismet)))this.kismet[s].visible&&($("#"+s+"Kismet").prop("onclick",null).off("click"),$("#"+s+"Kismet").click((function(){var e=this.id.substring(0,this.id.length-6);game.buyKismet(e)})))}updateResourcePayload(e){var t=parseInt($("#"+e+"KMSlider").val()),s=game.resources.resources[e].g_value*t;$("#"+e+"KM .donate span").html(intToString(t)),$("#"+e+"KM .receive span").html(intToString(s))}modChecked(e){var t=this.flotillaConfig.checked.indexOf(e);-1==t?this.flotillaConfig.checked=this.flotillaConfig.checked.concat([e]):this.flotillaConfig.checked.splice(t,1)}drawChecked(){for(var e of($(".checkBoxF").removeClass("active"),$(".checkBoxF").addClass("inactive"),this.flotillaConfig.checked))$("#"+e+"Chk").addClass("active")}drawTooltipStem(){this.drawKarmaTooltips()}drawKarmaTooltips(){for(var e of Object.keys(this.kismet))this.kismet[e].visible&&addText("#"+e+"Kismet",this.kismet[e].description+"<hr/><i>"+this.kismet[e].effect+"</i>",this.kismet[e].cost)}}class Buffs{constructor(){this.init()}init(){this.buildBuffHash()}buildBuffHash(){this.buffs={playBuff:{name:"Playing!",description:"Extra joyful from having fun!",effect:'x<span id="e">2</span> '+getIcon("joy")+"/s",duration:6e4,modify:{resources:{joy:{g_mult:["multiply",2]}}},stackable:!1,eligible:!0,random:!1,cost:null},jobBuff:{name:"Focused",description:"Your otters are on a roll! Increased job effects.",effect:'+<span id="e">15</span>% job performance ('+getIcon("food")+", "+getIcon("wood")+", "+getIcon("stone")+")",duration:6e4,logText:"Your otters feel extra focused!",modify:{resources:{food:{g_mult_jobs:["multiply",1.15]},wood:{g_mult_jobs:["multiply",1.15]},stone:{g_mult_jobs:["multiply",1.15]},ore:{g_mult_jobs:["multiply",1.15]}}},stackable:!1,eligible:!0,random:!0,cost:null},joyBuff:{name:"Elated",description:"Your otters are bursting with joy!",effect:'+<span id="e">50</span>% '+getIcon("joy")+"/s",duration:6e4,logText:"Your otters are feeling super playful!",modify:{resources:{joy:{g_mult:["multiply",1.5]}}},stackable:!1,eligible:!0,random:!0,cost:null},bldgBuff:{name:"Bounty",description:"Your basic generators are all producing remarkable gains!",effect:'+<span id="e">10</span>% generator performance ('+getIcon("food")+", "+getIcon("wood")+", "+getIcon("stone")+")",duration:6e4,logText:"Your farms, dams, and quarries all have bountiful gains!",modify:{resources:{food:{g:["multiply",1.1]},wood:{g:["multiply",1.1]},stone:{g:["multiply",1.1]}}},stackable:!1,eligible:!0,random:!0,cost:null},foodDirect:{name:"Direct (A)",description:"Increasing the effect of your Aquafarmers.",effect:"Boosted job ("+getIcon("food")+")",duration:null,modify:{resources:{food:{g_mult_jobs:["multiply",2]}}},stackable:!1,eligible:!0,random:!0,cost:null},woodDirect:{name:"Direct (L)",description:"Increasing the effect of your Loggers.",effect:"Boosted job ("+getIcon("wood")+")",duration:null,modify:{resources:{wood:{g_mult_jobs:["multiply",2]}}},stackable:!1,eligible:!0,random:!0,cost:null},stoneDirect:{name:"Direct (M)",description:"Increasing the effect of your Miners.",effect:"Boosted job ("+getIcon("stone")+")",duration:null,modify:{resources:{stone:{g_mult_jobs:["multiply",2]},ore:{g_mult_jobs:["multiply",1]}}},stackable:!1,eligible:!0,random:!0,cost:null}},this.buffSettings={poppable:[["jobBuff",1],["joyBuff",1],["bldgBuff",1]],baseChance:25e-5,lockout:0},this.resetCopy=JSON.parse(JSON.stringify(this.buffs)),this.resetCopyBuffSettings=JSON.parse(JSON.stringify(this.buffSettings)),this.activeBuffs=[]}rollForBuff(){var e=!1;if(game.upgrades.upgrades.supervise.completed&!this.activeBuffs.some(e=>["foodDirect","woodDirect","stoneDirect"].indexOf(e[0])>-1)?($("#mkFood").addClass("actGlow"),$("#mkWood").addClass("actGlow"),$("#mkStone").addClass("actGlow"),e=!0):($("#mkFood").removeClass("actGlow"),$("#mkWood").removeClass("actGlow"),$("#mkStone").removeClass("actGlow")),this.activeBuffs.some(e=>["playBuff"].indexOf(e[0])>-1)?$("#mkJoy").removeClass("actGlow"):($("#mkJoy").addClass("actGlow"),e=!0),e?$("#actBtn").addClass("menuGlow"):$("#actBtn").removeClass("menuGlow"),0==this.buffSettings.lockout){for(var t of shuffle(this.buffSettings.poppable))if(!("jobBuff"==t[0]&!game.upgrades.upgrades.evoefficient.completed||("joyBuff"==t[0]|"bldgBuff"==t[0])&!game.upgrades.eraComplete("evoefficient"))){var s=t[1]*this.buffSettings.baseChance;game.upgrades.eraComplete("evoefficient")&&(s*=2),s=1-Math.pow(1-s,1/game.gameSpeed),Math.random()<s&&(game.addBuff(t[0]),this.lockout(30))}}else this.buffSettings.lockout-=1e3/game.gameSpeed}clearSupervise(){for(var e=[],t=this.activeBuffs.length-1;t>=0;--t)this.activeBuffs[t][0].endsWith("Direct")&&(e=e.concat([t]));for(var s of e)this.activeBuffs.splice(s,1)}lockout(e){this.buffSettings.lockout=1e3*e}resetBuffMetrics(){for(var e of Object.keys(this.buffs))this.buffs[e].modify=JSON.parse(JSON.stringify(this.resetCopy[e].modify)),this.buffs[e].effect=this.resetCopy[e].effect,this.buffs[e].duration=this.resetCopy[e].duration}isEligibleForStacking(e){var t=!0;for(var s of this.activeBuffs)s[0]!=e||this.buffs[s[0]].stackable||(t=!1);return t}dropBuff(e){for(var t=[],s=this.activeBuffs.length-1;s>=0;--s){this.activeBuffs[s][0]==e&&(t=t.concat([s]))}for(var o of t)this.activeBuffs.splice(o,1)}refreshBuff(e){for(var t=this.activeBuffs.length-1;t>=0;--t){var s=this.activeBuffs[t];s[0]==e&&(this.activeBuffs[t][1]=this.buffs[e].duration,this.showBuffBarfill(s[0],s[1],t),this.drawBuffs())}}tickBuffs(e){for(var t=[],s=this.activeBuffs.length-1;s>=0;--s)null!=this.activeBuffs[s][1]&&(this.activeBuffs[s][1]>this.buffs[this.activeBuffs[s][0]].duration&&(this.activeBuffs[s][1]=this.buffs[this.activeBuffs[s][0]].duration),this.activeBuffs[s][1]-=e-this.activeBuffs[s][2],this.activeBuffs[s][2]=e,this.activeBuffs[s][1]<=0&&(t=t.concat([s])));if(t.length>0){for(var o of t)this.activeBuffs.splice(o,1);this.drawBuffs()}return this.displayTimeouts(),t.length>0}displayTimeouts(){for(var e=0;e<this.activeBuffs.length;++e){var t=this.activeBuffs[e];null!=this.activeBuffs[e][1]?$("#"+t[0]+"_"+e+" .cur").html(sec2time(t[1]/1e3)):$("#"+t[0]+"_"+e+" .cur").html(""),this.showBuffBarfill(t[0],t[1],e)}}refillBuffBars(){for(var e=0;e<this.activeBuffs.length;++e){var t=this.activeBuffs[e];this.showBuffBarfill(t[0],t[1],e)}}showBuffBarfill(e,t,s){let o=Math.round(100*t/this.buffs[e].duration);if(e.endsWith("Direct")){var i=e.substring(0,e.length-6)+"Job";$("#"+e+"_"+s+" .bg").css("background-color",game.community.jobs[i].color)}else{var a=125,r=125;o<=50?a=(50-Math.abs(o-50))/50*a:o>=80&&(r=(20-Math.abs(100-o-20))/20*r),$("#"+e+"_"+s+" .bg").css("background-color","rgb("+r+","+a+",0)")}var l=$("#"+e+"_"+s+" .bg").width()/$("#"+e+"_"+s+" .bg").parent().width()*100;o!=Math.round(l)&&$("#"+e+"_"+s+" .bg").css({width:Math.round(o-1).toString()+"%"})}drawBuffs(){var e="";for(var t of[!1,!0])for(var s=0;s<this.activeBuffs.length;++s){var o=this.activeBuffs[s];null==o[1]!=t&&(e+="<div class='res' id='"+o[0]+"_"+s+"'>",e+="<div class='bg buffbg'></div><div class='resWrapper'><div class='resTitle'>"+this.buffs[o[0]].name+"</div>",e+="<div class='resVal'><span class='cur'></span></div></div></div>")}$("#buffArea").html(e),this.displayTimeouts(),this.drawBuffTooltips(),$(document).tooltip()}drawBuffTooltips(){for(var e=0;e<this.activeBuffs.length;++e){var t=this.activeBuffs[e];this.drawBuffTooltip(t[0]+"_"+e,t[0])}}drawTooltipStem(){this.drawBuffTooltips()}drawBuffTooltip(e,t){if(addText("#"+e,this.buffs[t].description+'<hr/><i id="etext">'+this.buffs[t].effect+"</i>"),"playBuff"==t){var s=this.buffs.playBuff.modify.resources.joy.g_mult[1];game.upgrades.upgrades.partytime.completed&&(s+=.05*game.resources.resources.pop.v),$("#"+toTitleCase(e)+" #e").html(intToString(s))}}}class Community{constructor(){this.init()}init(){this.buildCommunityHash()}buildCommunityHash(){this.jobs={noJob:{name:"Playmates",description:"Otters without jobs play and generate extra joy!",effect:'+<span id="e">10</span>% '+getIcon("joy")+"/s",i:[.0125],modify:{resources:{joy:{g_mult_jobs:["add",.0125],g_base:["add",.1]}}},color:"#666",buyable:!0},foodJob:{name:"Aquafarmers",description:"Dedicated fishmongers and fishmanagers.",effect:'+<span id="e">10</span>% '+getIcon("food")+"/s",i:[.025],modify:{resources:{food:{g_mult_jobs:["add",.025]}}},color:"#066",buyable:!0},woodJob:{name:"Loggers",description:"Wood is hard to gather with paws!",effect:'+<span id="e">10</span>% '+getIcon("wood")+"/s",i:[.025],modify:{resources:{wood:{g_mult_jobs:["add",.025]}}},color:"#640",buyable:!0},stoneJob:{name:"Miners",description:"The best job, rocks are endless fun!",effect:'+<span id="e">10</span>% '+getIcon("stone")+"/s",i:[.025,0],modify:{resources:{stone:{g_mult_jobs:["add",.025]},ore:{g_mult_jobs:["add",0]}}},color:"#600",buyable:!0},makeJob:{name:"Makers",description:"The only thing better than having fun is creating it!",effect:'+<span id="e">1</span> Craft/Timer',i:[.01],color:"#606",buyable:!1}},this.resetCopy=JSON.parse(JSON.stringify(this.jobs)),this.otters=[new Otter],this.lostOtters=[],this.otters[0].otter.expRate*=3,this.setJobChangeButtons(),this.commConf={curPage:0,starveCooldown:1e4,jobMulti:1},$(".communityMultiSlider").html(makeMultiSelectTooltip("job","Set"))}resetJobMetrics(){for(var e of Object.keys(this.jobs))null!=this.resetCopy[e].modify&&(this.jobs[e].modify=JSON.parse(JSON.stringify(this.resetCopy[e].modify))),this.jobs[e].effect=this.resetCopy[e].effect,this.jobs[e].description=this.resetCopy[e].description,this.jobs[e].name=this.resetCopy[e].name,this.jobs[e].i=JSON.parse(JSON.stringify(this.resetCopy[e].i))}buildOtters(){this.drawJobDiv()}setHashCSSColors(){for(var e of Object.keys(this.jobs))$("."+e).css({backgroundColor:this.jobs[e].color})}addOtter(e){if(this.lostOtters.length>0&null==e)addLog((e=this.lostOtters.shift()).otter.name+" has returned!"),this.otters=this.otters.concat([e]),this.drawJobDiv(),game.rebuildAllModifications(),game.settings.updateVillageClassifier();else{var t=!1;null==e?addLog((e=new Otter).otter.name+" has arrived!"):t=!0,this.otters=this.otters.concat([e]),2==this.otters.length&&(game.story.story.ch2.pal=e.otter.name),t||(this.drawJobDiv(),game.settings.updateVillageClassifier())}}starveOtter(){if(this.commConf.starveCooldown>0&&(this.commConf.starveCooldown-=1e3/game.gameSpeed),this.commConf.starveCooldown<=0){var e=Math.floor(Math.random()*(this.otters.length-1))+1;addLog(this.otters[e].otter.name+" is off to find food. They'll come back when you can feed them!"),this.lostOtters=this.lostOtters.concat(this.otters.splice(e,1)),game.resources.resources.pop.v-=1,this.drawJobDiv(),game.rebuildAllModifications(),game.settings.updateVillageClassifier(),this.commConf.starveCooldown=1e4}}setManager(e,t){var s=this.getManager(e);s>-1&&(this.otters[s].otter.manages=null),this.otters[t].otter.manages=e}getManager(e){for(var t in this.otters)if(this.otters[t].otter.manages==e)return parseInt(t);return-1}updateJobCounts(){var e=this.otters.map(e=>e.otter.job);this.counts={};for(var t=0;t<e.length;t++)this.counts[e[t]]=1+(this.counts[e[t]]||0);for(var s of Object.keys(this.counts))$("#"+s+"Container .jobValue").html(this.counts[s]);for(var s of Object.keys(this.jobs).filter(t=>!e.includes(t)))$("#"+s+"Container .jobValue").html(0);$(".totMkrs").length>0&null!=this.counts.makeJob?game.resources.modifyMakerTotals(this.counts.makeJob):$(".totMkrs").length>0&null==this.counts.makeJob&&game.resources.modifyMakerTotals(0)}getRandomOtter(e){var t=[];$.each(this.otters,(function(s,o){o.otter.job==e&&t.push(s)}));var s=this.getManager(e);if(t.length>1)if(-1==s)var o=t[Math.floor(Math.random()*t.length)];else{for(var i=t[Math.floor(Math.random()*t.length)];i==s;)i=t[Math.floor(Math.random()*t.length)];var o=i}else(o=t[0])==s&&(this.otters[o].otter.manages=null);return o}setJobChangeButtons(){var e=this;for(var t of Object.keys(this.jobs))"noJob"!=t&&($("#"+t+"Container .removeJob").prop("onclick",null).off("click"),$("#"+t+"Container .removeJob").click((function(){for(var t=0;t<e.commConf.jobMulti;++t)null!=e.counts[this.id]&&t<e.counts[this.id]?e.otters[e.getRandomOtter(this.id)].otter.job="noJob":t=e.commConf.jobMulti;e.updateJobCounts(),e.drawJobDiv()})),$("#"+t+"Container .addJob").prop("onclick",null).off("click"),$("#"+t+"Container .addJob").click((function(){for(var t=0;t<e.commConf.jobMulti;++t)null!=e.counts.noJob&&t<e.counts.noJob?e.otters[e.getRandomOtter("noJob")].otter.job=this.id:t=e.commConf.jobMulti;e.updateJobCounts(),e.drawJobDiv()})))}tickOtters(){if(game.upgrades.upgrades.experiencegain.completed)for(var e in this.otters)this.otters[e].tickExperience()&&$("#otter"+e+" .otterDesc .oLvl").html(this.otters[e].otter.level)}drawTooltipStem(){this.drawJobTooltips()}drawJobTooltips(){for(var e of Object.keys(this.jobs)){addText("#"+e+"Container",this.jobs[e].description+"<hr/><i>"+this.jobs[e].effect+"</i>"),$("#"+e+"Container").css({backgroundColor:this.jobs[e].color});var t=this;$("#"+e+"Container #e").each((function(s){var o=100*t.jobs[e].i[s];"makeJob"==e&&(o=game.resources.resConf.makerCraftAmt),$(this).html(intToString(o,2)),s+=1}))}}drawJobDiv(){var e='<div class="actRow">',t=0;for(var s of Object.keys(this.jobs))if(this.jobs[s].buyable){t%2==0&&(e+="<div class='actCol'>");var o="No Manager",i="",a=this.getManager(s);a>-1&&(o=this.otters[a].otter.name,i=" set"),e+="<div class='actCell'><div class='jobWrapper'>",e+="<div class='jobContainer' id='"+s+"Container'>",e+="<div class='jobName'>"+this.jobs[s].name+"</div>",e+="<div class='jobQuantity'>",e+="<div class='removeJob jQ' id='"+s+"'>-</div><div class='jobValue jQ'>0</div><div class='addJob jQ' id='"+s+"'>+</div>",e+="</div>",e+="</div>",game.upgrades.upgrades.managers.completed&&"noJob"!=s&&"makeJob"!=s&&(e+="<div class='jobManager"+i+"' id='"+s+"Manager'>"+o+"</div>",$("#setManager").css("visibility","visible")),e+="</div></div>",t%2==1&&(e+="</div>"),t+=1}t%2==1&&(e+="<div class='actCell'></div></div>"),e+="</div>",$("#communityTabContents").html(e),this.drawJobTooltips(),this.setJobChangeButtons(),this.updateJobCounts(),this.drawOtterDiv(),this.setHashCSSColors(),game.rebuildAllModifications(),game.upgrades.upgrades.managers.completed&&this.drawManagerTooltips();var r=this;$("#jobMulti").prop("input",null).off(),$("#jobMulti").on("input",(function(){r.commConf.jobMulti=multiValConvert($(this).val()),r.commConf.jobMulti<1e5?$("#"+this.id+"Display").html(multiValConvert($(this).val())):$("#"+this.id+"Display").html("All")}))}drawManagerTooltips(){var e=Object.keys(this.jobs),t=e.map(e=>this.getManager(e));for(var s in e)-1!=t[s]&&addText("#"+e[s]+"Manager",this.otters[t[s]].otter.name+" increases "+this.jobs[e[s]].name+" performance by +"+Math.round(100*this.otters[t[s]].getImpact())+"%")}drawOtterDiv(){var e=[],t="";for(var s in this.otters)s%5==0&&(t+='<div class="otterRow">'),t+='<div class="otterEntry '+this.otters[s].otter.job+'" id="otter'+s+'"><div class="otterDesc"><div class="oLvl">'+this.otters[s].otter.level+'</div><div class="oName">'+this.otters[s].otter.name+'</div></div><div class="bg"></div></div>',s%5==4&&(t+="</div>"),s%25==24&&s>0&&(e=e.concat([t]),t="");for(var o=!1,i=s%5;i<4;++i)t+='<div class="otterFiller"></div>',o=!0;o&&(t+="</div>"),""!=t&&(e=e.concat([t]));var a="",r="",l="";if(e.length>1){for(var n in l+="<div class='otterPaginateMenu'><span class='pMenu' id='back'><</span>",e){var c="";n==this.commConf.curPage&&(c=" select"),l+="<span class='pMenu"+c+"' id='p"+n+"'>"+(parseInt(n)+1)+"</span>",r+="<div class='otterPaginate"+c+"' id='p"+n+"'>",r+=e[n],r+="</div>"}a+=(l+="<span class='pMenu' id='next'>></span></div>")+r}else a=e[0];$("#nameList").html(a),this.setOtterPaginate(),this.setHashCSSColors(),game.settings.rebuildOtterActions()}setOtterPaginate(){if($(".otterPaginateMenu .pMenu").length>0){var e=this;$(".pMenu").prop("onclick",null).off("click"),$(".pMenu").click((function(){var t=this.id;if("back"==t){var s=$(".otterPaginate").length;t=0==e.commConf.curPage?s-1:e.commConf.curPage-1}else if("next"==t){s=$(".otterPaginate").length;t=e.commConf.curPage==s-1?0:e.commConf.curPage+1}else t=parseInt(t.substring(1));$(".otterPaginate").removeClass("select"),$(".pMenu").removeClass("select"),$(".otterPaginate#p"+t).addClass("select"),$(".pMenu#p"+t).addClass("select"),e.commConf.curPage=parseInt(t)}))}}}class Settings{constructor(){this.ready=!1,this.setConf()}init(){this.setVisibilities(),this.setClog(),this.setSaveButtons(),this.setOptionButtons(),this.initializeRefresh(),this.setAutoSaveInterval(),this.setMenuButtons(),this.setOtterOptions(),this.otterAction=null}setConf(){this.conf={updateSpeed:50,time:0,autosaveTime:6e4,autosave:!0,lastTab:"act",showCompleted:!0,tutorial:!0,fresh:!0,version:"0.2.1",name:"Ellie",font:"Cambria",bg:"otters1",cellbg:"#113",vChecked:!1},$("#autosaveRange").val(this.conf.autosaveTime/1e3),game.community.otters[0].otter.name=this.conf.name}resetOrLoad(){this.updateResources(),this.updateNames(),this.initializeRefresh(),this.checkAndSetAutoSave(),this.updateVillageClassifier(),this.setOtterOptions(),this.otterAction=null,this.setVisibilities(!0),game.resources.drawResources()}getSavePayload(){return{r:game.resources.resources,b:game.buildings.buildings,u:game.upgrades.upgrades,c:game.settings.conf,l:$(".logcontents").html(),s:game.story.story,k:game.karma.kismet,g:game.karma.gift,f:game.karma.flotillaConfig,rc:game.resources.resConf,cc:game.community.commConf,buff:game.buffs.buffs,buffSettings:game.buffs.buffSettings,activeBuff:game.buffs.activeBuffs,community:game.community.jobs,otters:game.community.otters.map(e=>e.getOtterHash()),lostOtters:game.community.lostOtters.map(e=>e.getOtterHash()),otterTimer:game.resources.otterTimer,lastSave:(new Date).toString(),resetCopies:{buffs:JSON.parse(JSON.stringify(game.buffs.resetCopy)),buffSettings:JSON.parse(JSON.stringify(game.buffs.resetCopyBuffSettings)),community:JSON.parse(JSON.stringify(game.community.resetCopy)),buildings:JSON.parse(JSON.stringify(game.buildings.resetCopy)),resources:JSON.parse(JSON.stringify(game.resources.resetCopy)),upgrades:JSON.parse(JSON.stringify(game.upgrades.resetCopy)),karma:JSON.parse(JSON.stringify(game.karma.resetCopy))}}}save(e=0){let t=this.getSavePayload();localStorage.setItem("ottergame_save_lutria",LZString.compressToBase64(JSON.stringify(t)));let s=$(".loadIt").css("background-color");$(".saveIt").animate({backgroundColor:"#080"},50),$(".saveIt").animate({backgroundColor:s},400),0==e?console.log("Manually saved."):1==e&&console.log("Autosaved.")}load(e=0){var t=localStorage.getItem("ottergame_save_lutria");if(null==t&&null!=(t=localStorage.getItem("ottergame_save_v0.0.1"))&&(this.save(2),c("Migrated to Lutria save system"),localStorage.removeItem("ottergame_save_v0.0.1")),null!==t){t=JSON.parse(LZString.decompressFromBase64(t));var s=this.detectAndFixVersionUpdate(t);if(game.settings.conf.version!=t.c.version&&(game.settings.conf.vChecked=!1),s)this.conf.vChecked=!1;else{game.resources.resources=t.r,game.buildings.buildings=t.b,game.upgrades.upgrades=t.u,game.buffs.buffs=t.buff,game.buffs.buffSettings=t.buffSettings,game.buffs.activeBuffs=t.activeBuff,game.community.jobs=t.community,game.community.otters=t.otters.map(e=>new Otter(e)),null!=t.k&&(game.karma.kismet=t.k),null!=t.g&&(game.karma.gift=t.g),null!=t.f&&(game.karma.flotillaConfig=t.f),null!=t.rc&&(game.resources.resConf=t.rc),null!=t.cc&&(game.community.commConf=t.rc),null!=t.lostOtters&&(game.community.lostOtters=t.lostOtters.map(e=>new Otter(e))),null!=t.s&&(game.story.story=t.s),null!=t.otterTimer&&(game.resources.otterTimer=t.otterTimer);var o=t.c.version;game.settings.conf=t.c,game.settings.conf.version=o,0==e&&console.log("Loaded!")}this.conf.vChecked||$(".version").addClass("actGlow"),null!=t.l&&$(".logcontents").html(t.l),this.computeOfflineEarnings(t.lastSave,!s)}else console.log("No savegame detected. Setting initial savegame."),this.conf.fresh=!0,this.conf.vChecked=!1,this.save(2);this.resetOrLoad(),this.repopulateWindows(),this.ready=!0,$(".log").height(0),$(".logWrapper").css("height","100%"),$(".log").height($(".logWrapper").height())}detectAndFixVersionUpdate(e){var t=!1,s=e.resetCopies,o=[],i=[],a=[[e.buff,game.buffs,"buffs",game.buffs.buffs],[e.buffSettings,game.buffs,"buffSettings",game.buffs.buffSettings],[e.r,game.resources,"resources",game.resources.resources],[e.b,game.buildings,"buildings",game.buildings.buildings],[e.u,game.upgrades,"upgrades",game.upgrades.upgrades],[e.k,game.karma,"karma",game.karma.kismet],[e.community,game.community,"community",game.community.jobs]];for(var r of a){var l=null;if(l="buffSettings"==r[2]?r[1].resetCopyBuffSettings:r[1].resetCopy,null==s[r[2]]||0!=JSON.stringify(l).trim().localeCompare(JSON.stringify(s[r[2]]).trim()))t=!0,"Buffsettings"!=toTitleCase(r[2])&&(o=o.concat(["* "+toTitleCase(r[2])]),i=i.concat([toTitleCase(r[2])]))}if(JSON.stringify(Object.keys((new Otter).otter)).localeCompare(JSON.stringify(Object.keys(e.otters[0])))&&(t=!0,o=o.concat(["* Otters"]),i=i.concat(["New features for your pals"])),(null==e.s||JSON.stringify(Object.keys(game.story.story)).localeCompare(JSON.stringify(Object.keys(e.s))))&&(t=!0,o=o.concat(["* Story"]),i=i.concat(["Story Content"])),(null==e.f||null==e.c||null==e.rc||null==e.cc||JSON.stringify(Object.keys(this.conf)).localeCompare(JSON.stringify(Object.keys(e.c)))||JSON.stringify(Object.keys(game.karma.flotillaConfig)).localeCompare(JSON.stringify(Object.keys(e.f)))||JSON.stringify(Object.keys(game.resources.resConf)).localeCompare(JSON.stringify(Object.keys(e.rc)))||JSON.stringify(Object.keys(game.community.commConf)).localeCompare(JSON.stringify(Object.keys(e.cc))))&&(t=!0,o=o.concat(["* Various Configurations"])),t){for(var n of(console.log("New version detected. Updates include:"),console.log(o.join("\n")),i.length>0&&($(".changeLog").html(i.join("<br/>")),$(".newVersion").css("display","block")),a)){var c=n[0],d=n[1],u=n[2];if(null!=c)for(var f of Object.keys(c)){l=null;if(null!=(l="buffSettings"==u?d.resetCopyBuffSettings:d.resetCopy)[f])for(var m of Object.keys(c[f]))"v"==m?d.setV(f,c[f][m]):"completed"==m?d.setCompleted(f,c[f][m]):"visible"==m&&d.setVisible(f,c[f][m])}}for(var g in e.otters){var p=new Otter;for(var h of Object.keys(p.otter))null!=e.otters[g][h]&&(p.otter[h]=e.otters[g][h]);0==g?game.community.otters[0]=p:game.community.addOtter(p)}for(var g in e.lostOtters){p=new Otter;for(var h of Object.keys(p.otter))null!=e.otters[g][h]&&(p.otter[h]=e.otters[g][h]);game.community.lostOtters=game.community.lostOtters.concat(p)}for(var v of e.activeBuff)null!=game.buffs.buffs[v[0]]&&(game.buffs.activeBuffs=game.buffs.activeBuffs.concat([v]));for(var b of Object.keys(e.c))"version"!=b&&(this.conf[b]=e.c[b]);if($("#autosaveRange").val(this.conf.autosaveTime/1e3),null!=e.s)for(var y of Object.keys(e.s))"how"==y|"log"==y||(game.story.story[y]=e.s[y]);if(null!=e.g)for(var C of Object.keys(e.g))game.karma.gift[C]=e.g[C];if(null!=e.f)for(var k of Object.keys(e.f))game.karma.flotillaConfig[k]=e.f[k];if(null!=e.rc)for(var l of Object.keys(e.rc))game.resources.resConf[l]=e.rc[l];if(null!=e.cc)for(var S of Object.keys(e.cc))game.community.commConf[S]=e.cc[S];return game.rebuildAllModifications(),game.buffs.drawTooltipStem(),game.community.drawTooltipStem(),game.buildings.drawTooltipStem(),game.resources.drawTooltipStem(),!0}return!1}computeOfflineEarnings(e,t){var s=new Date-new Date(e);game.community.otterTimer-=s,game.karma.flotillaConfig.timer-=s,$(".offlineEarnings .earningsTime span").html(dhm(s));var o="";for(var i of Object.keys(game.resources.resources))if("pop"!=i){var a=game.resources.getPPS(i)*s/1e3;a>game.resources.getMax(i)-game.resources.getCur(i)&&(a=game.resources.getMax(i)-game.resources.getCur(i)),game.resources.add(i,a),o+='<div class="earningResource">'+i+'</span>: <span class="earningValue">'+Math.round(a)+"</div>",$(".offlineEarnings .earnings").html(o)}for(var r in game.buffs.activeBuffs)null!=game.buffs.activeBuffs[r][1]&&(game.buffs.activeBuffs[r][1]-=s);s>36e5&t&&($(".offlineEarnings").css("display","block"),this.save(2))}repopulateWindows(){game.buildings.populateBuildings(),game.upgrades.populateUpgradeTab(),game.karma.populateKarmaTab(),this.toggleCompletedUpgradeView(this.conf.showCompleted),game.buffs.drawBuffs()}wipe(){localStorage.removeItem("ottergame_save_v0.0.1"),localStorage.removeItem("ottergame_save_lutria"),console.log("Wiped!"),location.reload(!0)}setSaveButtons(){var e=this;$(".loadIt").prop("onclick",null).off("click"),$(".loadIt").click((function(){$(".popup").css("display","none"),"none"==$(".loadConfirm ").css("display")?$(".loadConfirm ").css("display","block"):$(".loadConfirm ").css("display","none")})),$(".wipe").prop("onclick",null).off("click"),$(".wipe").click((function(){$(".popup").css("display","none"),"none"==$(".wipeConfirm ").css("display")?$(".wipeConfirm ").css("display","block"):$(".wipeConfirm ").css("display","none")})),$(".confirm div div").prop("onclick",null).off("click"),$(".confirm div div").click((function(){$(".loadConfirm ").css("display","none"),$(".wipeConfirm ").css("display","none"),$(".importConfirm ").css("display","none")})),$(".saveIt").prop("onclick",null).off("click"),$(".saveIt").click((function(){e.save()})),$(".loadConfirm .confirmWindow .confYes").click((function(){e.load()})),$(".wipeConfirm .confirmWindow .confYes").click((function(){e.wipe()})),this.setCheatBar()}setCheatBar(){if(null!=document.getElementById("cheater")){$(".cheatMaxResources").prop("onclick",null).off("click"),$(".cheatMaxResources").click((function(){for(var e of Object.keys(game.resources.resources))"pop"==e||"gift"==e||game.resources.resources[e].craftable||game.resources.isCapped(e)&&(game.resources.resources[e].v=game.resources.resources[e].m)})),$(".cheatZeroResources").prop("onclick",null).off("click"),$(".cheatZeroResources").click((function(){for(var e of Object.keys(game.resources.resources))"pop"!=e&&(game.resources.resources[e].v=0)})),$(".cheatOtterTimer").prop("onclick",null).off("click"),$(".cheatOtterTimer").click((function(){game.resources.otterTimer=0})),$(".cheatResourceStorage").prop("onclick",null).off("click"),$(".cheatResourceStorage").click((function(){for(var e of Object.keys(game.resources.resources))"pop"!=e&&(game.resources.resources[e].m*=2)}));for(var e of[1,2,5,10])$(".cheatSpeed#"+e+"x").prop("onclick",null).off("click"),$(".cheatSpeed#"+e+"x").click((function(){var e=parseInt(this.id.substring(0,this.id.length-1));console.log("Game speed set to "+e),game.setTickRate(e)}))}}setOptionButtons(){var e=this;for(var t of($(".toggleAutosave").prop("onclick",null).off("click"),$(".toggleAutosave").click((function(){$(".toggleAutosave ").hasClass("on")?e.conf.autosave=!1:e.conf.autosave=!0,e.autosaveVisibility(),e.checkAndSetAutoSave()})),$("#autosaveRange").on("change",(function(){e.conf.autosaveTime=1e3*$("#autosaveRange").val(),e.checkAndSetAutoSave()})),$("#autosaveRange").on("input",(function(){$(".asSetting").html($("#autosaveRange").val()+"s")})),["","Tut"])){var s="#setName"+t;addText(s,'1-15 Characters<br/>A-Z and "-"'),$(s).prop("onclick",null).off("click"),$(s).click((function(){var t="#nameBox"+this.id.substring(7);if($(t).val().length>1&&$(t).val().length<=15&&!/[^A-Za-z\-]/i.test($(t).val())){e.conf.name=$(t).val(),game.community.otters[0].otter.name=e.conf.name,game.community.drawOtterDiv(),$(t).val(""),$("#nameBox").attr("placeholder",e.conf.name),$(t).attr("placeholder",e.conf.name);let s=$(t).css("background-color"),o=$(t).css("border");$(t).animate({backgroundColor:"#afa",borderColor:"#0f0"},100).animate({backgroundColor:s,borderColor:o},100),e.updateVillageClassifier()}else[1,2,3].forEach((function(e){let s=$(t).css("background-color"),o=$(t).css("border");$(t).animate({backgroundColor:"#faa",borderColor:"#f00"},100).animate({backgroundColor:s,borderColor:o},100)}))}))}$(".offlineEarnings .fancyLink").prop("onclick",null).off("click"),$(".offlineEarnings .fancyLink").click((function(){$(".offlineEarnings").css("display","none")})),$(".newVersion .fancyLink").prop("onclick",null).off("click"),$(".newVersion .fancyLink").click((function(){$(".newVersion").css("display","none")})),$(".gettingStarted .fancyLink").prop("onclick",null).off("click"),$(".gettingStarted .fancyLink").click((function(){$(".gettingStarted").css("display","none")})),$(".importView").prop("onclick",null).off("click"),$(".importView").click((function(){$("#ieTextBox .ieBox").css("display","none"),$("#ieTextBox #importText").css("display","block")})),$(".exportView").prop("onclick",null).off("click"),$(".exportView").click((function(){$("#ieTextBox .ieBox").css("display","none"),$("#ieTextBox #exportText").css("display","block");var t=LZString.compressToBase64(JSON.stringify(e.getSavePayload()));$("#ieTextBox #exportText #exportTextBox").html(t)})),$(".exportFile").prop("onclick",null).off("click"),$(".exportFile").click((function(){$("#ieTextBox .ieBox").css("display","none"),$("#ieTextBox #emptyText").css("display","block")})),$("#exportButton").prop("onclick",null).off("click"),$("#exportButton").click((function(){let e=$(".loadIt").css("background-color");$("#exportButton .fancyLink").animate({backgroundColor:"#080"},50),$("#exportButton .fancyLink").animate({backgroundColor:e},400),copyToClipboard($("#ieTextBox #exportText #exportTextBox").html())})),$("#exportFileButton").prop("onclick",null).off("click"),$("#exportFileButton a").click((function(){let t=$(".loadIt").css("background-color");$("#exportFileButton .fancyLink").animate({backgroundColor:"#080"},50),$("#exportFileButton .fancyLink").animate({backgroundColor:t},400),this.href="data:text/plain;charset=utf-8,"+encodeURIComponent(LZString.compressToBase64(JSON.stringify(e.getSavePayload()))),this.download=$("#fileName").val()+".txt"})),$(".importButton").prop("onclick",null).off("click"),$(".importButton").click((function(){$(".popup").css("display","none"),$(".importConfirm ").css("display","block")})),$(".importConfirm .confirmWindow .confYes").prop("onclick",null).off("click"),$(".importConfirm .confirmWindow .confYes").click((function(){var e=$("#importTextBox").val();""!=LZString.decompressFromBase64(e)&&null!=LZString.decompressFromBase64(e)||alert("This doesn't appear to be a valid save file. Check your savegame."),localStorage.setItem("ottergame_save_lutria",e),location.reload(!0)})),$("#optFont").off("change"),$("#optFont").on("change",(function(){e.setFont(this.value)})),$("#optBG").off("change"),$("#optBG").on("change",(function(){e.setBG(this.value)})),$("#optCell").off("change"),$("#optCell").on("change",(function(){e.setCell(this.value)}))}setFont(e="Cambria"){"Cambria"==e?$("body").css("font-family","Cambria, Cochin, Georgia, Times, 'Times New Roman', serif"):$("body").css("font-family",e),this.conf.font=e,$("#optFont").val(e)}setBG(e="otters1"){"otters1"==e?($("body").css("background","linear-gradient(rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(./images/otterbg.png)"),$("body").css("background-color","none")):"otters2"==e?($("body").css("background","linear-gradient(rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(./images/otterbg2.png)"),$("body").css("background-color","none")):"otters3"==e?($("body").css("background","linear-gradient(rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(./images/otterbghearts.png)"),$("body").css("background-color","none")):"otters4"==e?($("body").css("background","linear-gradient(rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.0)), url(./images/riverOtters.png)"),$("body").css("background-color","none")):($("body").css("background-image","none"),$("body").css("background-color",e)),this.conf.bg=e,$("#optBG").val(e)}setCell(e="#113"){for(var t of[".menu",".view",".stats",".resources",".buffs",".eventslog"])$(t).css("background-color",e);this.conf.cellbg=e,$("#optCell").val(e)}setOtterOptions(){$("#reassignView ").css("display","block");var e=this;for(var t of["NoJob","FoodJob","WoodJob","StoneJob","MakeJob"])$("#r"+t).css("background-color",game.community.jobs[t.charAt(0).toLowerCase()+t.substring(1)].color),$("#r"+t).prop("onclick",null).off("click"),$("#r"+t).click((function(){var t=this.id.substring(1);$(".reassignButton").css("border-color","#666"),$(".managerButton").css("border-color","darkgoldenrod"),$("#r"+t).css("border-color","#eee"),$(".otterEntry").addClass("activeAction"),e.otterAction=["reassign",t.charAt(0).toLowerCase()+t.substring(1)]})),$("#m"+t).css("background-color",game.community.jobs[t.charAt(0).toLowerCase()+t.substring(1)].color),$("#m"+t).prop("onclick",null).off("click"),$("#m"+t).click((function(){var t=this.id.substring(1);$(".reassignButton").css("border-color","#666"),$(".managerButton").css("border-color","darkgoldenrod"),$("#m"+t).css("border-color","gold"),$(".otterEntry").addClass("activeAction"),e.otterAction=["manage",t.charAt(0).toLowerCase()+t.substring(1)]}));for(var s of["reassign","setManager","sort"])$("#"+s).prop("onclick",null).off("click"),$("#"+s).click((function(){var e=this.id;$(".otterSetting").css("display","none"),$(".otterOptionTab").addClass("dis"),$("#"+e).removeClass("dis"),$("#"+e+"View ").css("display","block")}));$("#clearOtterOption").prop("onclick",null).off("click"),$("#clearOtterOption").click((function(){$(".managerButton").css("border-color","darkgoldenrod"),$(".reassignButton").css("border-color","#666"),$(".otterEntry").removeClass("activeAction"),e.otterAction=null}))}rebuildOtterActions(){var e=this;for(var t in game.community.otters)$("#otter"+t).prop("onclick",null).off("click"),$("#otter"+t).click((function(){if(null!=e.otterAction){var t=parseInt(this.id.substring(5));"reassign"==e.otterAction[0]?(game.community.otters[t].otter.job=e.otterAction[1],null!=game.community.otters[t].otter.manages&&game.community.otters[t].otter.manages!=e.otterAction[1]&&(game.community.otters[t].otter.manages=null),game.community.drawJobDiv(),$(".otterEntry").addClass("activeAction")):"manage"==e.otterAction[0]&&(game.community.otters[t].otter.job=e.otterAction[1],game.community.setManager(e.otterAction[1],t),game.community.drawJobDiv(),$(".otterEntry").addClass("activeAction"))}}))}autosaveVisibility(){this.conf.autosave?($(".toggleAutosave ").removeClass("off"),$(".toggleAutosave ").addClass("on"),$(".toggleAutosave ").html("On"),$(".slidecontainer").fadeTo(250,1),$(".slidecontainer").css("pointer-events","auto")):($(".toggleAutosave ").removeClass("on"),$(".toggleAutosave ").addClass("off"),$(".toggleAutosave ").html("Off"),$(".slidecontainer").fadeTo(250,0),$(".slidecontainer").css("pointer-events","none"))}setMenuButtons(){var e=this;for(var t of["act","upg","pop","craft","opt","story","help","gift","clog"])$("#"+t+"Btn").prop("onclick",null).off("click"),$("#"+t+"Btn").click((function(){var s=this.id.toLowerCase().substring(0,this.id.length-3);e.clearAndSetActiveView(s),"clog"==t&&($(this).removeClass("actGlow"),e.conf.vChecked=!0),$(".log").height(0),$(".log").height($(".logWrapper").height()-15)}));$(".hideUpgrades").prop("onclick",null).off("click"),$(".hideUpgrades").click((function(){"none"==$("#complDiv ").css("display")?e.toggleCompletedUpgradeView(!0):e.toggleCompletedUpgradeView(!1),$(".log").height(0),$(".log").height($(".logWrapper").height()-15)})),addText("#storyBtn","Story"),addText("#optBtn","Options"),addText("#helpBtn","Help"),addText("#discord","Join the Otter Life Discord!"),addText("#actBtn","Build"),addText("#upgBtn","Upgrades"),addText("#popBtn","Community"),addText("#giftBtn","Karma"),addText("#craftBtn","Crafting")}toggleCompletedUpgradeView(e){e?($("#complDiv ").css("display","block"),$(".hideUpgrades ").html("Hide Completed"),this.conf.showCompleted=!0):($("#complDiv ").css("display","none"),$(".hideUpgrades ").html("Show Completed"),this.conf.showCompleted=!1)}clearAndSetActiveView(e){$(".subView").css("display","none"),$(".activeBtn").removeClass("activeBtn"),$("#"+e+"Btn").addClass("activeBtn"),$("#"+e+"View").css("display","block"),this.conf.lastTab=e}setAutoSaveInterval(){var e=this;this.autosaveInterval&&(clearInterval(this.autosaveInterval),this.autosaveInterval=null),this.autosaveInterval=setInterval((function(){game.settings.conf.autosave&&e.save(1)}),e.conf.autosaveTime)}checkAndSetAutoSave(){$(".asSetting").html(this.conf.autosaveTime/1e3+"s"),$("#autosaveRange").val(this.conf.autosaveTime/1e3),this.conf.autosave?this.setAutoSaveInterval():this.autosaveInterval&&(clearInterval(this.autosaveInterval),this.autosaveInterval=null)}setVisibilities(e=!1){$("#nameBox").attr("placeholder",this.conf.name),$("#nameBoxTut").attr("placeholder",this.conf.name),this.autosaveVisibility(),this.showMenuAndResources(),$(".version").html("v"+this.conf.version),this.setFont(this.conf.font),this.setBG(this.conf.bg),this.setCell(this.conf.cellbg),this.openLastView()}showMenuAndResources(){0==game.buffs.activeBuffs.length?$(".buffs").css("display","none"):$(".buffs").css("display","block"),game.resources.resources.pop.m>0&&($(".popTabMenu").css("display","block"),$("#popRes").css("display","block")),game.resources.resources.gift.visible&&($("#giftBtn").css("display","block"),$("#giftRes").css("display","block")),game.upgrades.upgrades.evocreative.completed&&($("#craftBtn").css("display","block"),$("#rMakeJob").css("display","inline-block")),(game.upgrades.checkEligibility()||game.upgrades.getUpgradesByCompletion(!0).length>0)&&$("#upgBtn").css("display","block")}openLastView(){if($("#defaultView").css("display","none"),$(".subView").css("display","none"),$(".menuBtn").removeClass("activeBtn"),this.conf.fresh){game.pause=!0,$("#tutorialView").css("display","block"),$(".eventscol").css("visibility","hidden"),$(".statsCol").css("visibility","hidden"),$(".menu").css("visibility","hidden");var e=this;$("#startGame").prop("onclick",null).off("click"),$("#startGame").click((function(){$("#tutorialView").css("display","none"),$(".eventscol").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$(".statsCol").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$(".menu").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$("#actView").css("display","block"),$(".view").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$(".gettingStarted").css("display","block"),e.conf.fresh=!1,game.pause=!1,e.save(2)}))}else $(".eventscol").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$(".statsCol").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$(".menu").css("visibility","visible").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),$("#"+this.conf.lastTab+"View").css("display","block"),$("#"+this.conf.lastTab+"Btn").addClass("activeBtn"),$(".view").css({opacity:0,visibility:"visible"}).animate({opacity:1},2e3),"clog"==this.conf.lastTab&&(this.conf.vChecked=!0,$(".version").removeClass("actGlow"))}triggerUpgradeTab(){if("none"==$("#upgBtn").css("display")){$("#upgBtn").css("display","block").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)}}triggerPopulationTab(){if("none"==$("#popRes").css("display")){$(".popTabMenu").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250),$("#popRes").css("display","block").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)}}triggerGiftTab(){if("none"==$("#giftBtn").css("display")){$("#giftBtn").css("display","block").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250),$("#giftRes").css("display","block").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)}}triggerCraftTab(){if($("#rMakeJob").css("display","inline-block"),"none"==$("#craftBtn").css("display")){$("#craftBtn").css("display","block").fadeOut(0).fadeIn(250).fadeOut(250).fadeIn(250).fadeOut(250).fadeIn(250)}}setClog(){var e='<div class="chTitle">Otter Life version '+this.conf.version+"</div><hr/>";for(var t of Object.keys(clog))if(e+='<div class="blockTitle">'+toTitleCase(t)+"</div>","bugs"!=t){for(var s of(e+="<ul>",Object.keys(clog[t])))e+="<li>",e+="<u>"+s+"</u>: "+clog[t][s],e+="</li>";e+="</ul>"}else{for(var s of(e+="<ul>",clog[t].list))e+="<li>",e+=s,e+="</li>";e+="</ul>"}$("#clogView").html(e)}setRefreshRate(e){this.conf.updateSpeed=e,this.initializeRefresh()}initializeRefresh(){var e=this;this.refreshInterval&&(clearInterval(this.refreshInterval),this.refreshInterval=null),this.refreshInterval=setInterval((function(){e.updateResources(),e.updateOtters(),e.conf.time+=e.conf.updateSpeed}),e.conf.updateSpeed)}updateNames(){for(name of game.resources.getClickable())this.updateName(name,game.resources);for(name of game.buildings.names())this.updateName(name,game.buildings,"Bldg")}updateName(e,t,s=""){$("#mk"+toTitleCase(e)+s+" .name").html(toTitleCase(t.getTypeName(name)))}updateResources(){for(name of game.resources.names())this.updateResourceValues(name)}updateOtters(){if(game.upgrades.upgrades.experiencegain.completed)for(var e in game.community.otters){var t=Math.round(100*game.community.otters[e].otter.exp/game.community.otters[e].nextCutoff());$("#otter"+e+" .bg").css("width",t+"%")}}updateResourceValues(e){$("#"+e+"Res .resWrapper .resVal .cur").html(intToString(game.resources.getCur(e))),game.resources.isCapped(e)&&$("#"+e+"Res .resWrapper .resVal .max").html(intToString(game.resources.getMax(e)));var t=game.resources.getPPS(e);if(0!=t){var s=intToString(t)+"/s";t>0?(s="+"+s,$("#"+e+"Res .resWrapper .resVal .pps").css("color","#0e0")):(s=s,$("#"+e+"Res .resWrapper .resVal .pps").css("color","#f00")),$("#"+e+"Res .resWrapper .resVal .pps").html(s)}else $("#"+e+"Res .resWrapper .resVal .pps").html("");let o=Math.round(100*game.resources.getCur(e)/game.resources.getMax(e));if("joy"!=e){var i=125,a=125;o<=50?i=(50-Math.abs(o-50))/50*i:o>=70&&(a=(30-Math.abs(100-o-30))/30*a),$("#"+e+"Res .bg").css("background-color","rgb("+a+","+i+",0)")}else{let t=100+Math.round(100*o/100);$("#"+e+"Res .bg").css("background-color","rgb("+t+","+t+","+t+")")}o>100&&(o=100),$("#"+e+"Res .bg").css("width",o.toString()+"%")}updateVillageClassifier(){if(null!=game.resources){var e=["Bevy","Romp","Lodge","Family","Commune","Hamlet","Village","Town"],t=[1,10,25,50,100,200,400,800],s=game.resources.resources.pop.v;for(var o in t)0==o&s<t[o]?$("#commType").html("<i>You're all alone!</i>"):o==t.length-1&t[o]<=s?$("#commType").html(this.conf.name+"'s "+e[o]):s>=t[o-1]&s<t[o]&&$("#commType").html(this.conf.name+"'s "+e[o-1])}}}class OtterGame{constructor(){this.karma=new Karma,this.upgrades=new Upgrades,this.resources=new Res,this.buildings=new Bldg,this.buffs=new Buffs,this.community=new Community,this.story=new Story,this.pause=!1}init(){this.gameSpeed=10,this.setTickRate(),this.settings=new Settings,this.settings.load(),this.settings.init(),this.community.buildOtters(),this.rebuildAllModifications(),this.story.unlockStory(),this.upgrades.allDone()&&$(".noteComplete").css("display","block")}reset(){this.karma=new Karma,this.upgrades=new Upgrades,this.resources=new Res,this.buildings=new Bldg,this.buffs=new Buffs,this.community=new Community,this.story=new Story,this.pause=!1,this.rebuildAllModifications()}setTickRate(e=1){this.updateCycle&&(clearInterval(this.updateCycle),this.updateCycle=null);var t=this;this.updateCycle=setInterval((function(){t.pause||game.tick()}),1e3/this.gameSpeed/e)}tick(){this.resources.tick(),this.karma.tick(),this.karma.checkEligibility(),this.buildings.checkEligibility(),this.upgrades.checkEligibility(),this.buffs.rollForBuff(),this.buffs.activeBuffs.length>0&&($(".buffs").css("display","block"),this.buffs.tickBuffs(this.settings.conf.time)&&this.rebuildAllModifications()),0==this.buffs.activeBuffs.length&&$(".buffs").css("display","none"),this.resources.resources.joy.v>=5&&this.settings.triggerUpgradeTab(),this.community.tickOtters()}addResource(e){this.resources.add(e)}addBuildingAndMod(e){this.buildings.checkPurchase(e)&&(this.resources.applyCost(this.buildings.buildings[e].cost),this.buildings.add(e,1),this.rebuildAllModifications(),this.story.unlockStory())}addBuff(e){var t=this.buffs.buffs[e];null!=this.buffs.buffs[e].logText&&addLog(this.buffs.buffs[e].logText,"buff"),e.endsWith("Direct")&&this.buffs.clearSupervise(),this.buffs.isEligibleForStacking(e)?(this.buffs.activeBuffs=this.buffs.activeBuffs.concat([[e,t.duration,this.settings.conf.time]]),this.rebuildAllModifications()):this.buffs.refreshBuff(e),$(".buffs").css("display","block"),this.settings.updateResources(),this.buffs.drawBuffs()}buyUpgrade(e){this.upgrades.checkPurchase(e)&&(null!=this.upgrades.upgrades[e].logText&&addLog(this.upgrades.upgrades[e].logText,"upgrade"),this.customUpgradeTriggers(e),this.resources.applyCost(this.upgrades.upgrades[e].cost),this.upgrades.upgrades[e].completed=!0,this.upgrades.upgrades[e].available=!1,this.rebuildAllModifications(),this.settings.updateNames(),this.upgrades.populateUpgradeTab(),this.buildings.populateBuildings(),this.karma.populateKarmaTab(),this.community.drawJobDiv(),this.drawAllTooltips(),this.resources.drawResources(),$(".mouseTooltip").css("display","none"),this.story.unlockStory(),this.upgrades.allDone()&&$(".noteComplete").css("display","block"))}buyKismet(e){this.karma.checkPurchase(e)&&(this.resources.applyCost(this.karma.kismet[e].cost),this.karma.add(e,1),this.rebuildAllModifications(),this.upgrades.populateUpgradeTab(),this.buildings.populateBuildings(),this.karma.populateKarmaTab(),this.community.drawJobDiv(),this.drawAllTooltips(),this.resources.drawResources(),$(".mouseTooltip").css("display","none"),this.story.unlockStory())}customUpgradeTriggers(e){"evoefficient"==e&&this.addBuff("jobBuff"),"evocommunal"==e&&(game.resources.otterTimer-=3e4),"evangelize"==e&&(game.resources.otterTimer-=15e3),"centralize"==e&&(game.buildings.buildings.pit.v=Math.max(game.buildings.buildings.food.v,game.buildings.buildings.wood.v,game.buildings.buildings.stone.v),game.buildings.buildings.food.v=0,game.buildings.buildings.wood.v=0,game.buildings.buildings.stone.v=0),"evosapience"==e&&game.settings.triggerGiftTab(),"evocreative"==e&&game.settings.triggerCraftTab(),"curingchamber"==e&&(game.buildings.buildings.curingchamber.v=20)}modResourcesAndBuildings(){for(var e of Object.keys(this.karma.kismet))this.modifyStem(e,this.karma.kismet,"kismet");for(var t of this.upgrades.getUpgradesByCompletion(!0))this.modifyStem(t,this.upgrades.upgrades,"upgrade"),null!=this.upgrades.upgrades[t].cbonus&&this.upgrades.eraComplete(t)&&this.modifyStem(t,this.upgrades.upgrades,"upgrade","cbonus");for(var s of Object.keys(this.buildings.buildings))this.modifyStem(s,this.buildings.buildings,"building");for(var o of this.buffs.activeBuffs)this.modifyStem(o[0],this.buffs.buffs,"buff");if(null!=this.community.otters)for(var i of this.community.otters)this.modifyStem(i.otter.job,this.community.jobs,"job","modify",i.otter.level)}modifyStem(e,t,s,o="modify",i=0){if(null!=t[e][o])for(var a of Object.keys(t[e][o]))"resources"==a?this.modClassFromReference(this.resources.resources,t,e,a,s,o,i):"buildings"==a?this.modClassFromReference(this.buildings.buildings,t,e,a,s,o,i):"buffs"==a?this.modClassFromReference(this.buffs.buffs,t,e,a,s,o,i):"jobs"==a?this.modClassFromReference(this.community.jobs,t,e,a,s,o,i):"kismet"==a?this.modClassFromReference(this.karma.kismet,t,e,a,s,o,i):"flotillaConfig"==a?this.modClassFromReference(this.karma.flotillaConfig,t,e,a,s,o,i):"resConf"==a&&this.modClassFromReference(this.resources.resConf,t,e,a,s,o,i)}modClassFromReference(e,t,s,o,i,a,r){for(var l of Object.keys(t[s][a][o]))for(var n of Object.keys(t[s][a][o][l])){var c=e,d="";if("flotillaConfig"==o||"resConf"==o)d=n;else if(c=c[l],n.includes(",")){var u=n.split(",");for(var f in u)f!=u.length-1?c=c[u[f]]:d=u[f]}else d=n;if("t"==n||"description"==n||"buyable"==n||"visible"==n||"effect"==n)"buyable"==n&&null!=c.logText&&0==c[d]&&addLog(c.logText,"building"),c[d]=t[s][a][o][l][n];else if("v"==n){var m=modFunctions(t[s][a][o][l][n][0],t[s][a][o][l][n][1],c[d]);console.log(t[s][a][o][l][n][0]+" "+t[s][a][o][l][n][1]+" "+c[d]),c[d]=m}else{var g=1;"building"!=i&&"kismet"!=i||(g=t[s].v);for(var p=0;p<g;++p){var h=t[s][a][o][l][n][1];if("buff"==i&&"playBuff"==s&&game.upgrades.upgrades.partytime.completed&&"g_mult"==n&&(h+=.05*game.resources.resources.pop.v),"job"==i&&(h*=1+.25*r,this.upgrades.upgrades.managers.completed&&"joy"!=l)){var v=this.community.getManager(l+"Job");v>-1&&(h*=1+this.community.otters[v].getImpact())}if(h>0||"zero"==t[s][a][o][l][n][0]){m=modFunctions(t[s][a][o][l][n][0],h,c[d]);c[d]=m}}}}}rebuildAllModifications(){this.resources.resetResourceMetrics(),this.buildings.resetBuildingMetrics(),this.buffs.resetBuffMetrics(),this.community.resetJobMetrics(),this.karma.resetKarmaMetrics(),this.modResourcesAndBuildings(),this.resources.adjustJoyIntensity(),this.buildings.rebuildAllCosts(),this.karma.rebuildAllCosts(),null!=this.settings&&this.settings.updateNames(),this.drawAllTooltips(),this.buffs.refillBuffBars()}drawAllTooltips(){this.resources.drawTooltipStem(),this.buildings.drawTooltipStem(),this.buffs.drawTooltipStem(),this.community.drawTooltipStem(),this.karma.drawTooltipStem()}}$(document).ready((function(){if("ksamim.github.io"!=window.top.location.host&"www.kongregate.com"!=window.top.location.host&"otterlife-dev.github.io"!=window.top.location.host&""!=window.top.location.host){var e='<div class="unauthorized">';e+='<div class="chtitle">Not Authorized!</div>',e+='<div class="chPara">This isn\'t an authorized location to play Otter Life!</div>',e+='<div class="chPara">Don\'t fret. You can play the current release at the ',e+='<a href="https://ksamim.github.io">main homepage</a> or on <a href="https://www.kongregate.com/games/Ksamim/otter-life">Kongregate</a>.</div>',e+='<div class="unauthlittle">You accessed this page from '+window.top.location.host+" which is not authorized.</div>",e+="</div>",$("body").html(e)}else if("otterlife-dev.github.io"==window.top.location.host){var t=prompt("Please enter the tester password!","");if("a627a5e3891c8d9e419cce85a1ae166537504d09"==Sha1.hash(t))(game=new OtterGame).init(),game.buildings.checkEligibility();else{e='<div class="unauthorized">';e+='<div class="chtitle">Not Authorized!</div>',e+='<div class="chPara">You might have entered the password wrong, or you might not be an Otter Life beta tester.</div>',e+="<div class=\"chPara\">Don't worry though, testing isn't all its cracked up to be. You can play the current release at the ",e+='<a href="https://ksamim.github.io">main homepage</a> or refresh and try a different password.</div>',e+="</div>",$("body").html(e)}}else(game=new OtterGame).init(),game.buildings.checkEligibility()}));